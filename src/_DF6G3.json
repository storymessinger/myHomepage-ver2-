{
  "name": "Jolly",
  "id": "_DF6G3",
  "sample": {
    "text": "HELLO",
    "index": 0,
    "cols": 24,
    "rows": 12,
    "background": "#eee"
  },
  "glyphs": {
    "A": {
      "letter": "A",
      "texture": "Cooper_Hewitt_Bold",
      "width": "0.4",
      "textureSize": "0.4",
      "alignToTexture": true,
      "u_0": "MOUSE_Y",
      "u_1": "MOUSE_X",
      "u_2": "0.2",
      "vert": "attribute vec4 a_position;\nattribute vec2 a_texcoord;\nattribute vec2 a_planecoord;\n\nuniform mat4 u_matrix;\n\nvarying vec2 v_texcoord;\nvarying vec2 v_planecoord;\n\nvoid main() {\n  gl_Position =  u_matrix * a_position;\n  v_texcoord = a_texcoord;\n  v_planecoord = a_planecoord;\n}",
      "frag": "#extension GL_OES_standard_derivatives : enable\n\nprecision highp float;\n\nuniform sampler2D u_fontTexture;\n\nuniform vec4 u_crop;\n\nuniform float u_0;\n\nuniform float u_1;\n\nuniform float u_2;\n\nuniform float u_time;\n\nuniform vec2 u_position;\n\nuniform vec4 u_edge;\n\n\n\nvarying vec2 v_texcoord;\n\nvarying vec2 v_planecoord;\n\nvarying vec2 v_position;\n\n\n\n\n\nfloat median(float r, float g, float b) {\n\n    return max(min(r, g), min(max(r, g), b));\n\n}\n\nfloat map(float value, float min1, float max1, float min2, float max2) {\n\n  return min2 + (value - min1) * (max2 - min2) / (max1 - min1);\n\n}\n\nvec2 calcTextcoord(vec2 uv) {\n\n  vec2 newUv = vec2(\n\n    map(uv.x, 0., 1., u_edge.x, u_edge.y),\n\n    map(uv.y, 0., 1., u_edge.z, u_edge.w)\n\n  );\n\n  // u_crop.x\n\n  return newUv;\n\n}\n\n\n\nfloat charMask(vec2 uv) {\n\n  \n\n  \n\n  \n\n  vec2 texcoord = calcTextcoord(uv);\n\n  // MSDF -> SDF\n\n  vec3 sample = texture2D(u_fontTexture, texcoord).rgb;\n\n  float sigDist = median(sample.r, sample.g, sample.b) - 0.5;\n\n  sigDist = clamp(sigDist + 0.5, 0., 1.0);\n\n  // Crop\n\n  if (u_crop.x > texcoord.x \n\n  ||  u_crop.y < texcoord.x\n\n  ||  u_crop.z > texcoord.y \n\n  ||  u_crop.w < texcoord.y) {\n\n    sigDist = 0.;\n\n  }\n\n  \n\n  return step(0.5, sigDist);\n\n}\n\n\n\nvoid main() {\n\n  \n\n  vec2 st = v_planecoord;\n\n  st *= (1., 1.);\n\n  \n  vec2 st_r = vec2(\n    st.x+sin(v_planecoord.y*20.+u_time*50.)\n    *0.7 * pow((1.-v_planecoord.y),4.5)\n    *pow((1.-abs(u_position.x-u_1)),15.),\n    map(st.y, 0.33,1., \n    0.3*(1.-abs(u_1-u_position.x)) * u_0*1.2, \n    1.-(0.4*(1.-abs(u_1-u_position.x))) * u_0*0.68\n    )\n  );\n  \n  vec2 st_g = vec2(\n    st.x+sin(v_planecoord.y*20.+u_time*(50.)+2.*u_2)\n    *0.7 * pow((1.-v_planecoord.y),4.5)\n    *pow((1.-abs(u_position.x-u_1)),15.),\n    map(st.y, 0.33,1., \n    0.3*(1.-abs(u_1-u_position.x)) * u_0*1.2, \n    1.-(0.4*(1.-abs(u_1-u_position.x))) * u_0*0.68\n    )\n  );\n  vec2 st_b = vec2(\n    st.x+sin(v_planecoord.y*20.+u_time*(50.)+4.*u_2)\n    *0.7 * pow((1.-v_planecoord.y),4.5)\n    *pow((1.-abs(u_position.x-u_1)),15.),\n    map(st.y, 0.33,1., \n    0.3*(1.-abs(u_1-u_position.x)) * u_0*1.2, \n    1.-(0.4*(1.-abs(u_1-u_position.x))) * u_0*0.68\n    )\n  );\n  \n  vec3 color = vec3(\n    1. - charMask(st_r),\n    1. - charMask(st_g),\n    1. - charMask(st_b)\n    );\n\n  \n\n  gl_FragColor = vec4(color, charMask(st_r)+charMask(st_g)+charMask(st_b));\n\n}\n\n",
      "focused": true,
      "error": false,
      "failed": false
    },
    "B": {
      "letter": "B",
      "texture": "Cooper_Hewitt_Bold",
      "width": "0.4",
      "textureSize": "0.4",
      "alignToTexture": true,
      "u_0": "MOUSE_Y",
      "u_1": "MOUSE_X",
      "u_2": "0.2",
      "vert": "attribute vec4 a_position;\nattribute vec2 a_texcoord;\nattribute vec2 a_planecoord;\n\nuniform mat4 u_matrix;\n\nvarying vec2 v_texcoord;\nvarying vec2 v_planecoord;\n\nvoid main() {\n  gl_Position =  u_matrix * a_position;\n  v_texcoord = a_texcoord;\n  v_planecoord = a_planecoord;\n}",
      "frag": "#extension GL_OES_standard_derivatives : enable\n\nprecision highp float;\n\nuniform sampler2D u_fontTexture;\n\nuniform vec4 u_crop;\n\nuniform float u_0;\n\nuniform float u_1;\n\nuniform float u_2;\n\nuniform float u_time;\n\nuniform vec2 u_position;\n\nuniform vec4 u_edge;\n\n\n\nvarying vec2 v_texcoord;\n\nvarying vec2 v_planecoord;\n\nvarying vec2 v_position;\n\n\n\n\n\nfloat median(float r, float g, float b) {\n\n    return max(min(r, g), min(max(r, g), b));\n\n}\n\nfloat map(float value, float min1, float max1, float min2, float max2) {\n\n  return min2 + (value - min1) * (max2 - min2) / (max1 - min1);\n\n}\n\nvec2 calcTextcoord(vec2 uv) {\n\n  vec2 newUv = vec2(\n\n    map(uv.x, 0., 1., u_edge.x, u_edge.y),\n\n    map(uv.y, 0., 1., u_edge.z, u_edge.w)\n\n  );\n\n  // u_crop.x\n\n  return newUv;\n\n}\n\n\n\nfloat charMask(vec2 uv) {\n\n  \n\n  \n\n  \n\n  vec2 texcoord = calcTextcoord(uv);\n\n  // MSDF -> SDF\n\n  vec3 sample = texture2D(u_fontTexture, texcoord).rgb;\n\n  float sigDist = median(sample.r, sample.g, sample.b) - 0.5;\n\n  sigDist = clamp(sigDist + 0.5, 0., 1.0);\n\n  // Crop\n\n  if (u_crop.x > texcoord.x \n\n  ||  u_crop.y < texcoord.x\n\n  ||  u_crop.z > texcoord.y \n\n  ||  u_crop.w < texcoord.y) {\n\n    sigDist = 0.;\n\n  }\n\n  \n\n  return step(0.5, sigDist);\n\n}\n\n\n\nvoid main() {\n\n  \n\n  vec2 st = v_planecoord;\n\n  st *= (1., 1.);\n\n  \n  vec2 st_r = vec2(\n    st.x+sin(v_planecoord.y*20.+u_time*50.)\n    *0.7 * pow((1.-v_planecoord.y),4.5)\n    *pow((1.-abs(u_position.x-u_1)),15.),\n    map(st.y, 0.33,1., \n    0.3*(1.-abs(u_1-u_position.x)) * u_0*1.2, \n    1.-(0.4*(1.-abs(u_1-u_position.x))) * u_0*0.68\n    )\n  );\n  \n  vec2 st_g = vec2(\n    st.x+sin(v_planecoord.y*20.+u_time*(50.)+2.*u_2)\n    *0.7 * pow((1.-v_planecoord.y),4.5)\n    *pow((1.-abs(u_position.x-u_1)),15.),\n    map(st.y, 0.33,1., \n    0.3*(1.-abs(u_1-u_position.x)) * u_0*1.2, \n    1.-(0.4*(1.-abs(u_1-u_position.x))) * u_0*0.68\n    )\n  );\n  vec2 st_b = vec2(\n    st.x+sin(v_planecoord.y*20.+u_time*(50.)+4.*u_2)\n    *0.7 * pow((1.-v_planecoord.y),4.5)\n    *pow((1.-abs(u_position.x-u_1)),15.),\n    map(st.y, 0.33,1., \n    0.3*(1.-abs(u_1-u_position.x)) * u_0*1.2, \n    1.-(0.4*(1.-abs(u_1-u_position.x))) * u_0*0.68\n    )\n  );\n  \n  vec3 color = vec3(\n    1. - charMask(st_r),\n    1. - charMask(st_g),\n    1. - charMask(st_b)\n    );\n\n  \n\n  gl_FragColor = vec4(color, charMask(st_r)+charMask(st_g)+charMask(st_b));\n\n}\n\n",
      "focused": true,
      "error": false,
      "failed": false
    },
    "C": {
      "letter": "C",
      "texture": "Cooper_Hewitt_Bold",
      "width": "0.4",
      "textureSize": "0.4",
      "alignToTexture": true,
      "u_0": "MOUSE_Y",
      "u_1": "MOUSE_X",
      "u_2": "0.2",
      "vert": "attribute vec4 a_position;\nattribute vec2 a_texcoord;\nattribute vec2 a_planecoord;\n\nuniform mat4 u_matrix;\n\nvarying vec2 v_texcoord;\nvarying vec2 v_planecoord;\n\nvoid main() {\n  gl_Position =  u_matrix * a_position;\n  v_texcoord = a_texcoord;\n  v_planecoord = a_planecoord;\n}",
      "frag": "#extension GL_OES_standard_derivatives : enable\n\nprecision highp float;\n\nuniform sampler2D u_fontTexture;\n\nuniform vec4 u_crop;\n\nuniform float u_0;\n\nuniform float u_1;\n\nuniform float u_2;\n\nuniform float u_time;\n\nuniform vec2 u_position;\n\nuniform vec4 u_edge;\n\n\n\nvarying vec2 v_texcoord;\n\nvarying vec2 v_planecoord;\n\nvarying vec2 v_position;\n\n\n\n\n\nfloat median(float r, float g, float b) {\n\n    return max(min(r, g), min(max(r, g), b));\n\n}\n\nfloat map(float value, float min1, float max1, float min2, float max2) {\n\n  return min2 + (value - min1) * (max2 - min2) / (max1 - min1);\n\n}\n\nvec2 calcTextcoord(vec2 uv) {\n\n  vec2 newUv = vec2(\n\n    map(uv.x, 0., 1., u_edge.x, u_edge.y),\n\n    map(uv.y, 0., 1., u_edge.z, u_edge.w)\n\n  );\n\n  // u_crop.x\n\n  return newUv;\n\n}\n\n\n\nfloat charMask(vec2 uv) {\n\n  \n\n  \n\n  \n\n  vec2 texcoord = calcTextcoord(uv);\n\n  // MSDF -> SDF\n\n  vec3 sample = texture2D(u_fontTexture, texcoord).rgb;\n\n  float sigDist = median(sample.r, sample.g, sample.b) - 0.5;\n\n  sigDist = clamp(sigDist + 0.5, 0., 1.0);\n\n  // Crop\n\n  if (u_crop.x > texcoord.x \n\n  ||  u_crop.y < texcoord.x\n\n  ||  u_crop.z > texcoord.y \n\n  ||  u_crop.w < texcoord.y) {\n\n    sigDist = 0.;\n\n  }\n\n  \n\n  return step(0.5, sigDist);\n\n}\n\n\n\nvoid main() {\n\n  \n\n  vec2 st = v_planecoord;\n\n  st *= (1., 1.);\n\n  \n  vec2 st_r = vec2(\n    st.x+sin(v_planecoord.y*20.+u_time*50.)\n    *0.7 * pow((1.-v_planecoord.y),4.5)\n    *pow((1.-abs(u_position.x-u_1)),15.),\n    map(st.y, 0.33,1., \n    0.3*(1.-abs(u_1-u_position.x)) * u_0*1.2, \n    1.-(0.4*(1.-abs(u_1-u_position.x))) * u_0*0.68\n    )\n  );\n  \n  vec2 st_g = vec2(\n    st.x+sin(v_planecoord.y*20.+u_time*(50.)+2.*u_2)\n    *0.7 * pow((1.-v_planecoord.y),4.5)\n    *pow((1.-abs(u_position.x-u_1)),15.),\n    map(st.y, 0.33,1., \n    0.3*(1.-abs(u_1-u_position.x)) * u_0*1.2, \n    1.-(0.4*(1.-abs(u_1-u_position.x))) * u_0*0.68\n    )\n  );\n  vec2 st_b = vec2(\n    st.x+sin(v_planecoord.y*20.+u_time*(50.)+4.*u_2)\n    *0.7 * pow((1.-v_planecoord.y),4.5)\n    *pow((1.-abs(u_position.x-u_1)),15.),\n    map(st.y, 0.33,1., \n    0.3*(1.-abs(u_1-u_position.x)) * u_0*1.2, \n    1.-(0.4*(1.-abs(u_1-u_position.x))) * u_0*0.68\n    )\n  );\n  \n  vec3 color = vec3(\n    1. - charMask(st_r),\n    1. - charMask(st_g),\n    1. - charMask(st_b)\n    );\n\n  \n\n  gl_FragColor = vec4(color, charMask(st_r)+charMask(st_g)+charMask(st_b));\n\n}\n\n",
      "focused": true,
      "error": false,
      "failed": false
    },
    "D": {
      "letter": "D",
      "texture": "Cooper_Hewitt_Bold",
      "width": "0.4",
      "textureSize": "0.4",
      "alignToTexture": true,
      "u_0": "MOUSE_Y",
      "u_1": "MOUSE_X",
      "u_2": "0.2",
      "vert": "attribute vec4 a_position;\nattribute vec2 a_texcoord;\nattribute vec2 a_planecoord;\n\nuniform mat4 u_matrix;\n\nvarying vec2 v_texcoord;\nvarying vec2 v_planecoord;\n\nvoid main() {\n  gl_Position =  u_matrix * a_position;\n  v_texcoord = a_texcoord;\n  v_planecoord = a_planecoord;\n}",
      "frag": "#extension GL_OES_standard_derivatives : enable\n\nprecision highp float;\n\nuniform sampler2D u_fontTexture;\n\nuniform vec4 u_crop;\n\nuniform float u_0;\n\nuniform float u_1;\n\nuniform float u_2;\n\nuniform float u_time;\n\nuniform vec2 u_position;\n\nuniform vec4 u_edge;\n\n\n\nvarying vec2 v_texcoord;\n\nvarying vec2 v_planecoord;\n\nvarying vec2 v_position;\n\n\n\n\n\nfloat median(float r, float g, float b) {\n\n    return max(min(r, g), min(max(r, g), b));\n\n}\n\nfloat map(float value, float min1, float max1, float min2, float max2) {\n\n  return min2 + (value - min1) * (max2 - min2) / (max1 - min1);\n\n}\n\nvec2 calcTextcoord(vec2 uv) {\n\n  vec2 newUv = vec2(\n\n    map(uv.x, 0., 1., u_edge.x, u_edge.y),\n\n    map(uv.y, 0., 1., u_edge.z, u_edge.w)\n\n  );\n\n  // u_crop.x\n\n  return newUv;\n\n}\n\n\n\nfloat charMask(vec2 uv) {\n\n  \n\n  \n\n  \n\n  vec2 texcoord = calcTextcoord(uv);\n\n  // MSDF -> SDF\n\n  vec3 sample = texture2D(u_fontTexture, texcoord).rgb;\n\n  float sigDist = median(sample.r, sample.g, sample.b) - 0.5;\n\n  sigDist = clamp(sigDist + 0.5, 0., 1.0);\n\n  // Crop\n\n  if (u_crop.x > texcoord.x \n\n  ||  u_crop.y < texcoord.x\n\n  ||  u_crop.z > texcoord.y \n\n  ||  u_crop.w < texcoord.y) {\n\n    sigDist = 0.;\n\n  }\n\n  \n\n  return step(0.5, sigDist);\n\n}\n\n\n\nvoid main() {\n\n  \n\n  vec2 st = v_planecoord;\n\n  st *= (1., 1.);\n\n  \n  vec2 st_r = vec2(\n    st.x+sin(v_planecoord.y*20.+u_time*50.)\n    *0.7 * pow((1.-v_planecoord.y),4.5)\n    *pow((1.-abs(u_position.x-u_1)),15.),\n    map(st.y, 0.33,1., \n    0.3*(1.-abs(u_1-u_position.x)) * u_0*1.2, \n    1.-(0.4*(1.-abs(u_1-u_position.x))) * u_0*0.68\n    )\n  );\n  \n  vec2 st_g = vec2(\n    st.x+sin(v_planecoord.y*20.+u_time*(50.)+2.*u_2)\n    *0.7 * pow((1.-v_planecoord.y),4.5)\n    *pow((1.-abs(u_position.x-u_1)),15.),\n    map(st.y, 0.33,1., \n    0.3*(1.-abs(u_1-u_position.x)) * u_0*1.2, \n    1.-(0.4*(1.-abs(u_1-u_position.x))) * u_0*0.68\n    )\n  );\n  vec2 st_b = vec2(\n    st.x+sin(v_planecoord.y*20.+u_time*(50.)+4.*u_2)\n    *0.7 * pow((1.-v_planecoord.y),4.5)\n    *pow((1.-abs(u_position.x-u_1)),15.),\n    map(st.y, 0.33,1., \n    0.3*(1.-abs(u_1-u_position.x)) * u_0*1.2, \n    1.-(0.4*(1.-abs(u_1-u_position.x))) * u_0*0.68\n    )\n  );\n  \n  vec3 color = vec3(\n    1. - charMask(st_r),\n    1. - charMask(st_g),\n    1. - charMask(st_b)\n    );\n\n  \n\n  gl_FragColor = vec4(color, charMask(st_r)+charMask(st_g)+charMask(st_b));\n\n}\n\n",
      "focused": true,
      "error": false,
      "failed": false
    },
    "E": {
      "letter": "E",
      "texture": "Cooper_Hewitt_Bold",
      "width": "0.4",
      "textureSize": "0.4",
      "alignToTexture": true,
      "u_0": "MOUSE_Y",
      "u_1": "MOUSE_X",
      "u_2": "0.2",
      "vert": "attribute vec4 a_position;\nattribute vec2 a_texcoord;\nattribute vec2 a_planecoord;\n\nuniform mat4 u_matrix;\n\nvarying vec2 v_texcoord;\nvarying vec2 v_planecoord;\n\nvoid main() {\n  gl_Position =  u_matrix * a_position;\n  v_texcoord = a_texcoord;\n  v_planecoord = a_planecoord;\n}",
      "frag": "#extension GL_OES_standard_derivatives : enable\n\nprecision highp float;\n\nuniform sampler2D u_fontTexture;\n\nuniform vec4 u_crop;\n\nuniform float u_0;\n\nuniform float u_1;\n\nuniform float u_2;\n\nuniform float u_time;\n\nuniform vec2 u_position;\n\nuniform vec4 u_edge;\n\n\n\nvarying vec2 v_texcoord;\n\nvarying vec2 v_planecoord;\n\nvarying vec2 v_position;\n\n\n\n\n\nfloat median(float r, float g, float b) {\n\n    return max(min(r, g), min(max(r, g), b));\n\n}\n\nfloat map(float value, float min1, float max1, float min2, float max2) {\n\n  return min2 + (value - min1) * (max2 - min2) / (max1 - min1);\n\n}\n\nvec2 calcTextcoord(vec2 uv) {\n\n  vec2 newUv = vec2(\n\n    map(uv.x, 0., 1., u_edge.x, u_edge.y),\n\n    map(uv.y, 0., 1., u_edge.z, u_edge.w)\n\n  );\n\n  // u_crop.x\n\n  return newUv;\n\n}\n\n\n\nfloat charMask(vec2 uv) {\n\n  \n\n  \n\n  \n\n  vec2 texcoord = calcTextcoord(uv);\n\n  // MSDF -> SDF\n\n  vec3 sample = texture2D(u_fontTexture, texcoord).rgb;\n\n  float sigDist = median(sample.r, sample.g, sample.b) - 0.5;\n\n  sigDist = clamp(sigDist + 0.5, 0., 1.0);\n\n  // Crop\n\n  if (u_crop.x > texcoord.x \n\n  ||  u_crop.y < texcoord.x\n\n  ||  u_crop.z > texcoord.y \n\n  ||  u_crop.w < texcoord.y) {\n\n    sigDist = 0.;\n\n  }\n\n  \n\n  return step(0.5, sigDist);\n\n}\n\n\n\nvoid main() {\n\n  \n\n  vec2 st = v_planecoord;\n\n  st *= (1., 1.);\n\n  \n  vec2 st_r = vec2(\n    st.x+sin(v_planecoord.y*20.+u_time*50.)\n    *0.7 * pow((1.-v_planecoord.y),4.5)\n    *pow((1.-abs(u_position.x-u_1)),15.),\n    map(st.y, 0.33,1., \n    0.3*(1.-abs(u_1-u_position.x)) * u_0*1.2, \n    1.-(0.4*(1.-abs(u_1-u_position.x))) * u_0*0.68\n    )\n  );\n  \n  vec2 st_g = vec2(\n    st.x+sin(v_planecoord.y*20.+u_time*(50.)+2.*u_2)\n    *0.7 * pow((1.-v_planecoord.y),4.5)\n    *pow((1.-abs(u_position.x-u_1)),15.),\n    map(st.y, 0.33,1., \n    0.3*(1.-abs(u_1-u_position.x)) * u_0*1.2, \n    1.-(0.4*(1.-abs(u_1-u_position.x))) * u_0*0.68\n    )\n  );\n  vec2 st_b = vec2(\n    st.x+sin(v_planecoord.y*20.+u_time*(50.)+4.*u_2)\n    *0.7 * pow((1.-v_planecoord.y),4.5)\n    *pow((1.-abs(u_position.x-u_1)),15.),\n    map(st.y, 0.33,1., \n    0.3*(1.-abs(u_1-u_position.x)) * u_0*1.2, \n    1.-(0.4*(1.-abs(u_1-u_position.x))) * u_0*0.68\n    )\n  );\n  \n  vec3 color = vec3(\n    1. - charMask(st_r),\n    1. - charMask(st_g),\n    1. - charMask(st_b)\n    );\n\n  \n\n  gl_FragColor = vec4(color, charMask(st_r)+charMask(st_g)+charMask(st_b));\n\n}\n\n",
      "focused": true,
      "error": false,
      "failed": false
    },
    "F": {
      "letter": "F",
      "texture": "Cooper_Hewitt_Bold",
      "width": "0.4",
      "textureSize": "0.4",
      "alignToTexture": true,
      "u_0": "MOUSE_Y",
      "u_1": "MOUSE_X",
      "u_2": "0.2",
      "vert": "attribute vec4 a_position;\nattribute vec2 a_texcoord;\nattribute vec2 a_planecoord;\n\nuniform mat4 u_matrix;\n\nvarying vec2 v_texcoord;\nvarying vec2 v_planecoord;\n\nvoid main() {\n  gl_Position =  u_matrix * a_position;\n  v_texcoord = a_texcoord;\n  v_planecoord = a_planecoord;\n}",
      "frag": "#extension GL_OES_standard_derivatives : enable\n\nprecision highp float;\n\nuniform sampler2D u_fontTexture;\n\nuniform vec4 u_crop;\n\nuniform float u_0;\n\nuniform float u_1;\n\nuniform float u_2;\n\nuniform float u_time;\n\nuniform vec2 u_position;\n\nuniform vec4 u_edge;\n\n\n\nvarying vec2 v_texcoord;\n\nvarying vec2 v_planecoord;\n\nvarying vec2 v_position;\n\n\n\n\n\nfloat median(float r, float g, float b) {\n\n    return max(min(r, g), min(max(r, g), b));\n\n}\n\nfloat map(float value, float min1, float max1, float min2, float max2) {\n\n  return min2 + (value - min1) * (max2 - min2) / (max1 - min1);\n\n}\n\nvec2 calcTextcoord(vec2 uv) {\n\n  vec2 newUv = vec2(\n\n    map(uv.x, 0., 1., u_edge.x, u_edge.y),\n\n    map(uv.y, 0., 1., u_edge.z, u_edge.w)\n\n  );\n\n  // u_crop.x\n\n  return newUv;\n\n}\n\n\n\nfloat charMask(vec2 uv) {\n\n  \n\n  \n\n  \n\n  vec2 texcoord = calcTextcoord(uv);\n\n  // MSDF -> SDF\n\n  vec3 sample = texture2D(u_fontTexture, texcoord).rgb;\n\n  float sigDist = median(sample.r, sample.g, sample.b) - 0.5;\n\n  sigDist = clamp(sigDist + 0.5, 0., 1.0);\n\n  // Crop\n\n  if (u_crop.x > texcoord.x \n\n  ||  u_crop.y < texcoord.x\n\n  ||  u_crop.z > texcoord.y \n\n  ||  u_crop.w < texcoord.y) {\n\n    sigDist = 0.;\n\n  }\n\n  \n\n  return step(0.5, sigDist);\n\n}\n\n\n\nvoid main() {\n\n  \n\n  vec2 st = v_planecoord;\n\n  st *= (1., 1.);\n\n  \n  vec2 st_r = vec2(\n    st.x+sin(v_planecoord.y*20.+u_time*50.)\n    *0.7 * pow((1.-v_planecoord.y),4.5)\n    *pow((1.-abs(u_position.x-u_1)),15.),\n    map(st.y, 0.33,1., \n    0.3*(1.-abs(u_1-u_position.x)) * u_0*1.2, \n    1.-(0.4*(1.-abs(u_1-u_position.x))) * u_0*0.68\n    )\n  );\n  \n  vec2 st_g = vec2(\n    st.x+sin(v_planecoord.y*20.+u_time*(50.)+2.*u_2)\n    *0.7 * pow((1.-v_planecoord.y),4.5)\n    *pow((1.-abs(u_position.x-u_1)),15.),\n    map(st.y, 0.33,1., \n    0.3*(1.-abs(u_1-u_position.x)) * u_0*1.2, \n    1.-(0.4*(1.-abs(u_1-u_position.x))) * u_0*0.68\n    )\n  );\n  vec2 st_b = vec2(\n    st.x+sin(v_planecoord.y*20.+u_time*(50.)+4.*u_2)\n    *0.7 * pow((1.-v_planecoord.y),4.5)\n    *pow((1.-abs(u_position.x-u_1)),15.),\n    map(st.y, 0.33,1., \n    0.3*(1.-abs(u_1-u_position.x)) * u_0*1.2, \n    1.-(0.4*(1.-abs(u_1-u_position.x))) * u_0*0.68\n    )\n  );\n  \n  vec3 color = vec3(\n    1. - charMask(st_r),\n    1. - charMask(st_g),\n    1. - charMask(st_b)\n    );\n\n  \n\n  gl_FragColor = vec4(color, charMask(st_r)+charMask(st_g)+charMask(st_b));\n\n}\n\n",
      "focused": true,
      "error": false,
      "failed": false
    },
    "G": {
      "letter": "G",
      "texture": "Cooper_Hewitt_Bold",
      "width": "0.4",
      "textureSize": "0.4",
      "alignToTexture": true,
      "u_0": "MOUSE_Y",
      "u_1": "MOUSE_X",
      "u_2": "0.2",
      "vert": "attribute vec4 a_position;\nattribute vec2 a_texcoord;\nattribute vec2 a_planecoord;\n\nuniform mat4 u_matrix;\n\nvarying vec2 v_texcoord;\nvarying vec2 v_planecoord;\n\nvoid main() {\n  gl_Position =  u_matrix * a_position;\n  v_texcoord = a_texcoord;\n  v_planecoord = a_planecoord;\n}",
      "frag": "#extension GL_OES_standard_derivatives : enable\n\nprecision highp float;\n\nuniform sampler2D u_fontTexture;\n\nuniform vec4 u_crop;\n\nuniform float u_0;\n\nuniform float u_1;\n\nuniform float u_2;\n\nuniform float u_time;\n\nuniform vec2 u_position;\n\nuniform vec4 u_edge;\n\n\n\nvarying vec2 v_texcoord;\n\nvarying vec2 v_planecoord;\n\nvarying vec2 v_position;\n\n\n\n\n\nfloat median(float r, float g, float b) {\n\n    return max(min(r, g), min(max(r, g), b));\n\n}\n\nfloat map(float value, float min1, float max1, float min2, float max2) {\n\n  return min2 + (value - min1) * (max2 - min2) / (max1 - min1);\n\n}\n\nvec2 calcTextcoord(vec2 uv) {\n\n  vec2 newUv = vec2(\n\n    map(uv.x, 0., 1., u_edge.x, u_edge.y),\n\n    map(uv.y, 0., 1., u_edge.z, u_edge.w)\n\n  );\n\n  // u_crop.x\n\n  return newUv;\n\n}\n\n\n\nfloat charMask(vec2 uv) {\n\n  \n\n  \n\n  \n\n  vec2 texcoord = calcTextcoord(uv);\n\n  // MSDF -> SDF\n\n  vec3 sample = texture2D(u_fontTexture, texcoord).rgb;\n\n  float sigDist = median(sample.r, sample.g, sample.b) - 0.5;\n\n  sigDist = clamp(sigDist + 0.5, 0., 1.0);\n\n  // Crop\n\n  if (u_crop.x > texcoord.x \n\n  ||  u_crop.y < texcoord.x\n\n  ||  u_crop.z > texcoord.y \n\n  ||  u_crop.w < texcoord.y) {\n\n    sigDist = 0.;\n\n  }\n\n  \n\n  return step(0.5, sigDist);\n\n}\n\n\n\nvoid main() {\n\n  \n\n  vec2 st = v_planecoord;\n\n  st *= (1., 1.);\n\n  \n  vec2 st_r = vec2(\n    st.x+sin(v_planecoord.y*20.+u_time*50.)\n    *0.7 * pow((1.-v_planecoord.y),4.5)\n    *pow((1.-abs(u_position.x-u_1)),15.),\n    map(st.y, 0.33,1., \n    0.3*(1.-abs(u_1-u_position.x)) * u_0*1.2, \n    1.-(0.4*(1.-abs(u_1-u_position.x))) * u_0*0.68\n    )\n  );\n  \n  vec2 st_g = vec2(\n    st.x+sin(v_planecoord.y*20.+u_time*(50.)+2.*u_2)\n    *0.7 * pow((1.-v_planecoord.y),4.5)\n    *pow((1.-abs(u_position.x-u_1)),15.),\n    map(st.y, 0.33,1., \n    0.3*(1.-abs(u_1-u_position.x)) * u_0*1.2, \n    1.-(0.4*(1.-abs(u_1-u_position.x))) * u_0*0.68\n    )\n  );\n  vec2 st_b = vec2(\n    st.x+sin(v_planecoord.y*20.+u_time*(50.)+4.*u_2)\n    *0.7 * pow((1.-v_planecoord.y),4.5)\n    *pow((1.-abs(u_position.x-u_1)),15.),\n    map(st.y, 0.33,1., \n    0.3*(1.-abs(u_1-u_position.x)) * u_0*1.2, \n    1.-(0.4*(1.-abs(u_1-u_position.x))) * u_0*0.68\n    )\n  );\n  \n  vec3 color = vec3(\n    1. - charMask(st_r),\n    1. - charMask(st_g),\n    1. - charMask(st_b)\n    );\n\n  \n\n  gl_FragColor = vec4(color, charMask(st_r)+charMask(st_g)+charMask(st_b));\n\n}\n\n",
      "focused": true,
      "error": false,
      "failed": false
    },
    "H": {
      "letter": "H",
      "texture": "Cooper_Hewitt_Bold",
      "width": "0.4",
      "textureSize": "0.4",
      "alignToTexture": true,
      "u_0": "MOUSE_Y",
      "u_1": "MOUSE_X",
      "u_2": "0.2",
      "vert": "attribute vec4 a_position;\nattribute vec2 a_texcoord;\nattribute vec2 a_planecoord;\n\nuniform mat4 u_matrix;\n\nvarying vec2 v_texcoord;\nvarying vec2 v_planecoord;\n\nvoid main() {\n  gl_Position =  u_matrix * a_position;\n  v_texcoord = a_texcoord;\n  v_planecoord = a_planecoord;\n}",
      "frag": "#extension GL_OES_standard_derivatives : enable\n\nprecision highp float;\n\nuniform sampler2D u_fontTexture;\n\nuniform vec4 u_crop;\n\nuniform float u_0;\n\nuniform float u_1;\n\nuniform float u_2;\n\nuniform float u_time;\n\nuniform vec2 u_position;\n\nuniform vec4 u_edge;\n\n\n\nvarying vec2 v_texcoord;\n\nvarying vec2 v_planecoord;\n\nvarying vec2 v_position;\n\n\n\n\n\nfloat median(float r, float g, float b) {\n\n    return max(min(r, g), min(max(r, g), b));\n\n}\n\nfloat map(float value, float min1, float max1, float min2, float max2) {\n\n  return min2 + (value - min1) * (max2 - min2) / (max1 - min1);\n\n}\n\nvec2 calcTextcoord(vec2 uv) {\n\n  vec2 newUv = vec2(\n\n    map(uv.x, 0., 1., u_edge.x, u_edge.y),\n\n    map(uv.y, 0., 1., u_edge.z, u_edge.w)\n\n  );\n\n  // u_crop.x\n\n  return newUv;\n\n}\n\n\n\nfloat charMask(vec2 uv) {\n\n  \n\n  \n\n  \n\n  vec2 texcoord = calcTextcoord(uv);\n\n  // MSDF -> SDF\n\n  vec3 sample = texture2D(u_fontTexture, texcoord).rgb;\n\n  float sigDist = median(sample.r, sample.g, sample.b) - 0.5;\n\n  sigDist = clamp(sigDist + 0.5, 0., 1.0);\n\n  // Crop\n\n  if (u_crop.x > texcoord.x \n\n  ||  u_crop.y < texcoord.x\n\n  ||  u_crop.z > texcoord.y \n\n  ||  u_crop.w < texcoord.y) {\n\n    sigDist = 0.;\n\n  }\n\n  \n\n  return step(0.5, sigDist);\n\n}\n\n\n\nvoid main() {\n\n  \n\n  vec2 st = v_planecoord;\n\n  st *= (1., 1.);\n\n  \n  vec2 st_r = vec2(\n    st.x+sin(v_planecoord.y*20.+u_time*50.)\n    *0.7 * pow((1.-v_planecoord.y),4.5)\n    *pow((1.-abs(u_position.x-u_1)),15.),\n    map(st.y, 0.33,1., \n    0.3*(1.-abs(u_1-u_position.x)) * u_0*1.2, \n    1.-(0.4*(1.-abs(u_1-u_position.x))) * u_0*0.68\n    )\n  );\n  \n  vec2 st_g = vec2(\n    st.x+sin(v_planecoord.y*20.+u_time*(50.)+2.*u_2)\n    *0.7 * pow((1.-v_planecoord.y),4.5)\n    *pow((1.-abs(u_position.x-u_1)),15.),\n    map(st.y, 0.33,1., \n    0.3*(1.-abs(u_1-u_position.x)) * u_0*1.2, \n    1.-(0.4*(1.-abs(u_1-u_position.x))) * u_0*0.68\n    )\n  );\n  vec2 st_b = vec2(\n    st.x+sin(v_planecoord.y*20.+u_time*(50.)+4.*u_2)\n    *0.7 * pow((1.-v_planecoord.y),4.5)\n    *pow((1.-abs(u_position.x-u_1)),15.),\n    map(st.y, 0.33,1., \n    0.3*(1.-abs(u_1-u_position.x)) * u_0*1.2, \n    1.-(0.4*(1.-abs(u_1-u_position.x))) * u_0*0.68\n    )\n  );\n  \n  vec3 color = vec3(\n    1. - charMask(st_r),\n    1. - charMask(st_g),\n    1. - charMask(st_b)\n    );\n\n  \n\n  gl_FragColor = vec4(color, charMask(st_r)+charMask(st_g)+charMask(st_b));\n\n}\n\n",
      "focused": true,
      "error": false,
      "failed": false
    },
    "I": {
      "letter": "I",
      "texture": "Cooper_Hewitt_Bold",
      "width": "0.4",
      "textureSize": "0.4",
      "alignToTexture": true,
      "u_0": "MOUSE_Y",
      "u_1": "MOUSE_X",
      "u_2": "0.2",
      "vert": "attribute vec4 a_position;\nattribute vec2 a_texcoord;\nattribute vec2 a_planecoord;\n\nuniform mat4 u_matrix;\n\nvarying vec2 v_texcoord;\nvarying vec2 v_planecoord;\n\nvoid main() {\n  gl_Position =  u_matrix * a_position;\n  v_texcoord = a_texcoord;\n  v_planecoord = a_planecoord;\n}",
      "frag": "#extension GL_OES_standard_derivatives : enable\n\nprecision highp float;\n\nuniform sampler2D u_fontTexture;\n\nuniform vec4 u_crop;\n\nuniform float u_0;\n\nuniform float u_1;\n\nuniform float u_2;\n\nuniform float u_time;\n\nuniform vec2 u_position;\n\nuniform vec4 u_edge;\n\n\n\nvarying vec2 v_texcoord;\n\nvarying vec2 v_planecoord;\n\nvarying vec2 v_position;\n\n\n\n\n\nfloat median(float r, float g, float b) {\n\n    return max(min(r, g), min(max(r, g), b));\n\n}\n\nfloat map(float value, float min1, float max1, float min2, float max2) {\n\n  return min2 + (value - min1) * (max2 - min2) / (max1 - min1);\n\n}\n\nvec2 calcTextcoord(vec2 uv) {\n\n  vec2 newUv = vec2(\n\n    map(uv.x, 0., 1., u_edge.x, u_edge.y),\n\n    map(uv.y, 0., 1., u_edge.z, u_edge.w)\n\n  );\n\n  // u_crop.x\n\n  return newUv;\n\n}\n\n\n\nfloat charMask(vec2 uv) {\n\n  \n\n  \n\n  \n\n  vec2 texcoord = calcTextcoord(uv);\n\n  // MSDF -> SDF\n\n  vec3 sample = texture2D(u_fontTexture, texcoord).rgb;\n\n  float sigDist = median(sample.r, sample.g, sample.b) - 0.5;\n\n  sigDist = clamp(sigDist + 0.5, 0., 1.0);\n\n  // Crop\n\n  if (u_crop.x > texcoord.x \n\n  ||  u_crop.y < texcoord.x\n\n  ||  u_crop.z > texcoord.y \n\n  ||  u_crop.w < texcoord.y) {\n\n    sigDist = 0.;\n\n  }\n\n  \n\n  return step(0.5, sigDist);\n\n}\n\n\n\nvoid main() {\n\n  \n\n  vec2 st = v_planecoord;\n\n  st *= (1., 1.);\n\n  \n  vec2 st_r = vec2(\n    st.x+sin(v_planecoord.y*20.+u_time*50.)\n    *0.7 * pow((1.-v_planecoord.y),4.5)\n    *pow((1.-abs(u_position.x-u_1)),15.),\n    map(st.y, 0.33,1., \n    0.3*(1.-abs(u_1-u_position.x)) * u_0*1.2, \n    1.-(0.4*(1.-abs(u_1-u_position.x))) * u_0*0.68\n    )\n  );\n  \n  vec2 st_g = vec2(\n    st.x+sin(v_planecoord.y*20.+u_time*(50.)+2.*u_2)\n    *0.7 * pow((1.-v_planecoord.y),4.5)\n    *pow((1.-abs(u_position.x-u_1)),15.),\n    map(st.y, 0.33,1., \n    0.3*(1.-abs(u_1-u_position.x)) * u_0*1.2, \n    1.-(0.4*(1.-abs(u_1-u_position.x))) * u_0*0.68\n    )\n  );\n  vec2 st_b = vec2(\n    st.x+sin(v_planecoord.y*20.+u_time*(50.)+4.*u_2)\n    *0.7 * pow((1.-v_planecoord.y),4.5)\n    *pow((1.-abs(u_position.x-u_1)),15.),\n    map(st.y, 0.33,1., \n    0.3*(1.-abs(u_1-u_position.x)) * u_0*1.2, \n    1.-(0.4*(1.-abs(u_1-u_position.x))) * u_0*0.68\n    )\n  );\n  \n  vec3 color = vec3(\n    1. - charMask(st_r),\n    1. - charMask(st_g),\n    1. - charMask(st_b)\n    );\n\n  \n\n  gl_FragColor = vec4(color, charMask(st_r)+charMask(st_g)+charMask(st_b));\n\n}\n\n",
      "focused": true,
      "error": false,
      "failed": false
    },
    "J": {
      "letter": "J",
      "texture": "Cooper_Hewitt_Bold",
      "width": "0.4",
      "textureSize": "0.4",
      "alignToTexture": true,
      "u_0": "MOUSE_Y",
      "u_1": "MOUSE_X",
      "u_2": "0.2",
      "vert": "attribute vec4 a_position;\nattribute vec2 a_texcoord;\nattribute vec2 a_planecoord;\n\nuniform mat4 u_matrix;\n\nvarying vec2 v_texcoord;\nvarying vec2 v_planecoord;\n\nvoid main() {\n  gl_Position =  u_matrix * a_position;\n  v_texcoord = a_texcoord;\n  v_planecoord = a_planecoord;\n}",
      "frag": "#extension GL_OES_standard_derivatives : enable\n\nprecision highp float;\n\nuniform sampler2D u_fontTexture;\n\nuniform vec4 u_crop;\n\nuniform float u_0;\n\nuniform float u_1;\n\nuniform float u_2;\n\nuniform float u_time;\n\nuniform vec2 u_position;\n\nuniform vec4 u_edge;\n\n\n\nvarying vec2 v_texcoord;\n\nvarying vec2 v_planecoord;\n\nvarying vec2 v_position;\n\n\n\n\n\nfloat median(float r, float g, float b) {\n\n    return max(min(r, g), min(max(r, g), b));\n\n}\n\nfloat map(float value, float min1, float max1, float min2, float max2) {\n\n  return min2 + (value - min1) * (max2 - min2) / (max1 - min1);\n\n}\n\nvec2 calcTextcoord(vec2 uv) {\n\n  vec2 newUv = vec2(\n\n    map(uv.x, 0., 1., u_edge.x, u_edge.y),\n\n    map(uv.y, 0., 1., u_edge.z, u_edge.w)\n\n  );\n\n  // u_crop.x\n\n  return newUv;\n\n}\n\n\n\nfloat charMask(vec2 uv) {\n\n  \n\n  \n\n  \n\n  vec2 texcoord = calcTextcoord(uv);\n\n  // MSDF -> SDF\n\n  vec3 sample = texture2D(u_fontTexture, texcoord).rgb;\n\n  float sigDist = median(sample.r, sample.g, sample.b) - 0.5;\n\n  sigDist = clamp(sigDist + 0.5, 0., 1.0);\n\n  // Crop\n\n  if (u_crop.x > texcoord.x \n\n  ||  u_crop.y < texcoord.x\n\n  ||  u_crop.z > texcoord.y \n\n  ||  u_crop.w < texcoord.y) {\n\n    sigDist = 0.;\n\n  }\n\n  \n\n  return step(0.5, sigDist);\n\n}\n\n\n\nvoid main() {\n\n  \n\n  vec2 st = v_planecoord;\n\n  st *= (1., 1.);\n\n  \n  vec2 st_r = vec2(\n    st.x+sin(v_planecoord.y*20.+u_time*50.)\n    *0.7 * pow((1.-v_planecoord.y),4.5)\n    *pow((1.-abs(u_position.x-u_1)),15.),\n    map(st.y, 0.33,1., \n    0.3*(1.-abs(u_1-u_position.x)) * u_0*1.2, \n    1.-(0.4*(1.-abs(u_1-u_position.x))) * u_0*0.68\n    )\n  );\n  \n  vec2 st_g = vec2(\n    st.x+sin(v_planecoord.y*20.+u_time*(50.)+2.*u_2)\n    *0.7 * pow((1.-v_planecoord.y),4.5)\n    *pow((1.-abs(u_position.x-u_1)),15.),\n    map(st.y, 0.33,1., \n    0.3*(1.-abs(u_1-u_position.x)) * u_0*1.2, \n    1.-(0.4*(1.-abs(u_1-u_position.x))) * u_0*0.68\n    )\n  );\n  vec2 st_b = vec2(\n    st.x+sin(v_planecoord.y*20.+u_time*(50.)+4.*u_2)\n    *0.7 * pow((1.-v_planecoord.y),4.5)\n    *pow((1.-abs(u_position.x-u_1)),15.),\n    map(st.y, 0.33,1., \n    0.3*(1.-abs(u_1-u_position.x)) * u_0*1.2, \n    1.-(0.4*(1.-abs(u_1-u_position.x))) * u_0*0.68\n    )\n  );\n  \n  vec3 color = vec3(\n    1. - charMask(st_r),\n    1. - charMask(st_g),\n    1. - charMask(st_b)\n    );\n\n  \n\n  gl_FragColor = vec4(color, charMask(st_r)+charMask(st_g)+charMask(st_b));\n\n}\n\n",
      "focused": true,
      "error": false,
      "failed": false
    },
    "K": {
      "letter": "K",
      "texture": "Cooper_Hewitt_Bold",
      "width": "0.4",
      "textureSize": "0.4",
      "alignToTexture": true,
      "u_0": "MOUSE_Y",
      "u_1": "MOUSE_X",
      "u_2": "0.2",
      "vert": "attribute vec4 a_position;\nattribute vec2 a_texcoord;\nattribute vec2 a_planecoord;\n\nuniform mat4 u_matrix;\n\nvarying vec2 v_texcoord;\nvarying vec2 v_planecoord;\n\nvoid main() {\n  gl_Position =  u_matrix * a_position;\n  v_texcoord = a_texcoord;\n  v_planecoord = a_planecoord;\n}",
      "frag": "#extension GL_OES_standard_derivatives : enable\n\nprecision highp float;\n\nuniform sampler2D u_fontTexture;\n\nuniform vec4 u_crop;\n\nuniform float u_0;\n\nuniform float u_1;\n\nuniform float u_2;\n\nuniform float u_time;\n\nuniform vec2 u_position;\n\nuniform vec4 u_edge;\n\n\n\nvarying vec2 v_texcoord;\n\nvarying vec2 v_planecoord;\n\nvarying vec2 v_position;\n\n\n\n\n\nfloat median(float r, float g, float b) {\n\n    return max(min(r, g), min(max(r, g), b));\n\n}\n\nfloat map(float value, float min1, float max1, float min2, float max2) {\n\n  return min2 + (value - min1) * (max2 - min2) / (max1 - min1);\n\n}\n\nvec2 calcTextcoord(vec2 uv) {\n\n  vec2 newUv = vec2(\n\n    map(uv.x, 0., 1., u_edge.x, u_edge.y),\n\n    map(uv.y, 0., 1., u_edge.z, u_edge.w)\n\n  );\n\n  // u_crop.x\n\n  return newUv;\n\n}\n\n\n\nfloat charMask(vec2 uv) {\n\n  \n\n  \n\n  \n\n  vec2 texcoord = calcTextcoord(uv);\n\n  // MSDF -> SDF\n\n  vec3 sample = texture2D(u_fontTexture, texcoord).rgb;\n\n  float sigDist = median(sample.r, sample.g, sample.b) - 0.5;\n\n  sigDist = clamp(sigDist + 0.5, 0., 1.0);\n\n  // Crop\n\n  if (u_crop.x > texcoord.x \n\n  ||  u_crop.y < texcoord.x\n\n  ||  u_crop.z > texcoord.y \n\n  ||  u_crop.w < texcoord.y) {\n\n    sigDist = 0.;\n\n  }\n\n  \n\n  return step(0.5, sigDist);\n\n}\n\n\n\nvoid main() {\n\n  \n\n  vec2 st = v_planecoord;\n\n  st *= (1., 1.);\n\n  \n  vec2 st_r = vec2(\n    st.x+sin(v_planecoord.y*20.+u_time*50.)\n    *0.7 * pow((1.-v_planecoord.y),4.5)\n    *pow((1.-abs(u_position.x-u_1)),15.),\n    map(st.y, 0.33,1., \n    0.3*(1.-abs(u_1-u_position.x)) * u_0*1.2, \n    1.-(0.4*(1.-abs(u_1-u_position.x))) * u_0*0.68\n    )\n  );\n  \n  vec2 st_g = vec2(\n    st.x+sin(v_planecoord.y*20.+u_time*(50.)+2.*u_2)\n    *0.7 * pow((1.-v_planecoord.y),4.5)\n    *pow((1.-abs(u_position.x-u_1)),15.),\n    map(st.y, 0.33,1., \n    0.3*(1.-abs(u_1-u_position.x)) * u_0*1.2, \n    1.-(0.4*(1.-abs(u_1-u_position.x))) * u_0*0.68\n    )\n  );\n  vec2 st_b = vec2(\n    st.x+sin(v_planecoord.y*20.+u_time*(50.)+4.*u_2)\n    *0.7 * pow((1.-v_planecoord.y),4.5)\n    *pow((1.-abs(u_position.x-u_1)),15.),\n    map(st.y, 0.33,1., \n    0.3*(1.-abs(u_1-u_position.x)) * u_0*1.2, \n    1.-(0.4*(1.-abs(u_1-u_position.x))) * u_0*0.68\n    )\n  );\n  \n  vec3 color = vec3(\n    1. - charMask(st_r),\n    1. - charMask(st_g),\n    1. - charMask(st_b)\n    );\n\n  \n\n  gl_FragColor = vec4(color, charMask(st_r)+charMask(st_g)+charMask(st_b));\n\n}\n\n",
      "focused": true,
      "error": false,
      "failed": false
    },
    "L": {
      "letter": "L",
      "texture": "Cooper_Hewitt_Bold",
      "width": "0.4",
      "textureSize": "0.4",
      "alignToTexture": true,
      "u_0": "MOUSE_Y",
      "u_1": "MOUSE_X",
      "u_2": "0.2",
      "vert": "attribute vec4 a_position;\nattribute vec2 a_texcoord;\nattribute vec2 a_planecoord;\n\nuniform mat4 u_matrix;\n\nvarying vec2 v_texcoord;\nvarying vec2 v_planecoord;\n\nvoid main() {\n  gl_Position =  u_matrix * a_position;\n  v_texcoord = a_texcoord;\n  v_planecoord = a_planecoord;\n}",
      "frag": "#extension GL_OES_standard_derivatives : enable\n\nprecision highp float;\n\nuniform sampler2D u_fontTexture;\n\nuniform vec4 u_crop;\n\nuniform float u_0;\n\nuniform float u_1;\n\nuniform float u_2;\n\nuniform float u_time;\n\nuniform vec2 u_position;\n\nuniform vec4 u_edge;\n\n\n\nvarying vec2 v_texcoord;\n\nvarying vec2 v_planecoord;\n\nvarying vec2 v_position;\n\n\n\n\n\nfloat median(float r, float g, float b) {\n\n    return max(min(r, g), min(max(r, g), b));\n\n}\n\nfloat map(float value, float min1, float max1, float min2, float max2) {\n\n  return min2 + (value - min1) * (max2 - min2) / (max1 - min1);\n\n}\n\nvec2 calcTextcoord(vec2 uv) {\n\n  vec2 newUv = vec2(\n\n    map(uv.x, 0., 1., u_edge.x, u_edge.y),\n\n    map(uv.y, 0., 1., u_edge.z, u_edge.w)\n\n  );\n\n  // u_crop.x\n\n  return newUv;\n\n}\n\n\n\nfloat charMask(vec2 uv) {\n\n  \n\n  \n\n  \n\n  vec2 texcoord = calcTextcoord(uv);\n\n  // MSDF -> SDF\n\n  vec3 sample = texture2D(u_fontTexture, texcoord).rgb;\n\n  float sigDist = median(sample.r, sample.g, sample.b) - 0.5;\n\n  sigDist = clamp(sigDist + 0.5, 0., 1.0);\n\n  // Crop\n\n  if (u_crop.x > texcoord.x \n\n  ||  u_crop.y < texcoord.x\n\n  ||  u_crop.z > texcoord.y \n\n  ||  u_crop.w < texcoord.y) {\n\n    sigDist = 0.;\n\n  }\n\n  \n\n  return step(0.5, sigDist);\n\n}\n\n\n\nvoid main() {\n\n  \n\n  vec2 st = v_planecoord;\n\n  st *= (1., 1.);\n\n  \n  vec2 st_r = vec2(\n    st.x+sin(v_planecoord.y*20.+u_time*50.)\n    *0.7 * pow((1.-v_planecoord.y),4.5)\n    *pow((1.-abs(u_position.x-u_1)),15.),\n    map(st.y, 0.33,1., \n    0.3*(1.-abs(u_1-u_position.x)) * u_0*1.2, \n    1.-(0.4*(1.-abs(u_1-u_position.x))) * u_0*0.68\n    )\n  );\n  \n  vec2 st_g = vec2(\n    st.x+sin(v_planecoord.y*20.+u_time*(50.)+2.*u_2)\n    *0.7 * pow((1.-v_planecoord.y),4.5)\n    *pow((1.-abs(u_position.x-u_1)),15.),\n    map(st.y, 0.33,1., \n    0.3*(1.-abs(u_1-u_position.x)) * u_0*1.2, \n    1.-(0.4*(1.-abs(u_1-u_position.x))) * u_0*0.68\n    )\n  );\n  vec2 st_b = vec2(\n    st.x+sin(v_planecoord.y*20.+u_time*(50.)+4.*u_2)\n    *0.7 * pow((1.-v_planecoord.y),4.5)\n    *pow((1.-abs(u_position.x-u_1)),15.),\n    map(st.y, 0.33,1., \n    0.3*(1.-abs(u_1-u_position.x)) * u_0*1.2, \n    1.-(0.4*(1.-abs(u_1-u_position.x))) * u_0*0.68\n    )\n  );\n  \n  vec3 color = vec3(\n    1. - charMask(st_r),\n    1. - charMask(st_g),\n    1. - charMask(st_b)\n    );\n\n  \n\n  gl_FragColor = vec4(color, charMask(st_r)+charMask(st_g)+charMask(st_b));\n\n}\n\n",
      "focused": true,
      "error": false,
      "failed": false
    },
    "M": {
      "letter": "M",
      "texture": "Cooper_Hewitt_Bold",
      "width": "0.4",
      "textureSize": "0.4",
      "alignToTexture": true,
      "u_0": "MOUSE_Y",
      "u_1": "MOUSE_X",
      "u_2": "0.2",
      "vert": "attribute vec4 a_position;\nattribute vec2 a_texcoord;\nattribute vec2 a_planecoord;\n\nuniform mat4 u_matrix;\n\nvarying vec2 v_texcoord;\nvarying vec2 v_planecoord;\n\nvoid main() {\n  gl_Position =  u_matrix * a_position;\n  v_texcoord = a_texcoord;\n  v_planecoord = a_planecoord;\n}",
      "frag": "#extension GL_OES_standard_derivatives : enable\n\nprecision highp float;\n\nuniform sampler2D u_fontTexture;\n\nuniform vec4 u_crop;\n\nuniform float u_0;\n\nuniform float u_1;\n\nuniform float u_2;\n\nuniform float u_time;\n\nuniform vec2 u_position;\n\nuniform vec4 u_edge;\n\n\n\nvarying vec2 v_texcoord;\n\nvarying vec2 v_planecoord;\n\nvarying vec2 v_position;\n\n\n\n\n\nfloat median(float r, float g, float b) {\n\n    return max(min(r, g), min(max(r, g), b));\n\n}\n\nfloat map(float value, float min1, float max1, float min2, float max2) {\n\n  return min2 + (value - min1) * (max2 - min2) / (max1 - min1);\n\n}\n\nvec2 calcTextcoord(vec2 uv) {\n\n  vec2 newUv = vec2(\n\n    map(uv.x, 0., 1., u_edge.x, u_edge.y),\n\n    map(uv.y, 0., 1., u_edge.z, u_edge.w)\n\n  );\n\n  // u_crop.x\n\n  return newUv;\n\n}\n\n\n\nfloat charMask(vec2 uv) {\n\n  \n\n  \n\n  \n\n  vec2 texcoord = calcTextcoord(uv);\n\n  // MSDF -> SDF\n\n  vec3 sample = texture2D(u_fontTexture, texcoord).rgb;\n\n  float sigDist = median(sample.r, sample.g, sample.b) - 0.5;\n\n  sigDist = clamp(sigDist + 0.5, 0., 1.0);\n\n  // Crop\n\n  if (u_crop.x > texcoord.x \n\n  ||  u_crop.y < texcoord.x\n\n  ||  u_crop.z > texcoord.y \n\n  ||  u_crop.w < texcoord.y) {\n\n    sigDist = 0.;\n\n  }\n\n  \n\n  return step(0.5, sigDist);\n\n}\n\n\n\nvoid main() {\n\n  \n\n  vec2 st = v_planecoord;\n\n  st *= (1., 1.);\n\n  \n  vec2 st_r = vec2(\n    st.x+sin(v_planecoord.y*20.+u_time*50.)\n    *0.7 * pow((1.-v_planecoord.y),4.5)\n    *pow((1.-abs(u_position.x-u_1)),15.),\n    map(st.y, 0.33,1., \n    0.3*(1.-abs(u_1-u_position.x)) * u_0*1.2, \n    1.-(0.4*(1.-abs(u_1-u_position.x))) * u_0*0.68\n    )\n  );\n  \n  vec2 st_g = vec2(\n    st.x+sin(v_planecoord.y*20.+u_time*(50.)+2.*u_2)\n    *0.7 * pow((1.-v_planecoord.y),4.5)\n    *pow((1.-abs(u_position.x-u_1)),15.),\n    map(st.y, 0.33,1., \n    0.3*(1.-abs(u_1-u_position.x)) * u_0*1.2, \n    1.-(0.4*(1.-abs(u_1-u_position.x))) * u_0*0.68\n    )\n  );\n  vec2 st_b = vec2(\n    st.x+sin(v_planecoord.y*20.+u_time*(50.)+4.*u_2)\n    *0.7 * pow((1.-v_planecoord.y),4.5)\n    *pow((1.-abs(u_position.x-u_1)),15.),\n    map(st.y, 0.33,1., \n    0.3*(1.-abs(u_1-u_position.x)) * u_0*1.2, \n    1.-(0.4*(1.-abs(u_1-u_position.x))) * u_0*0.68\n    )\n  );\n  \n  vec3 color = vec3(\n    1. - charMask(st_r),\n    1. - charMask(st_g),\n    1. - charMask(st_b)\n    );\n\n  \n\n  gl_FragColor = vec4(color, charMask(st_r)+charMask(st_g)+charMask(st_b));\n\n}\n\n",
      "focused": true,
      "error": false,
      "failed": false
    },
    "N": {
      "letter": "N",
      "texture": "Cooper_Hewitt_Bold",
      "width": "0.4",
      "textureSize": "0.4",
      "alignToTexture": true,
      "u_0": "MOUSE_Y",
      "u_1": "MOUSE_X",
      "u_2": "0.2",
      "vert": "attribute vec4 a_position;\nattribute vec2 a_texcoord;\nattribute vec2 a_planecoord;\n\nuniform mat4 u_matrix;\n\nvarying vec2 v_texcoord;\nvarying vec2 v_planecoord;\n\nvoid main() {\n  gl_Position =  u_matrix * a_position;\n  v_texcoord = a_texcoord;\n  v_planecoord = a_planecoord;\n}",
      "frag": "#extension GL_OES_standard_derivatives : enable\n\nprecision highp float;\n\nuniform sampler2D u_fontTexture;\n\nuniform vec4 u_crop;\n\nuniform float u_0;\n\nuniform float u_1;\n\nuniform float u_2;\n\nuniform float u_time;\n\nuniform vec2 u_position;\n\nuniform vec4 u_edge;\n\n\n\nvarying vec2 v_texcoord;\n\nvarying vec2 v_planecoord;\n\nvarying vec2 v_position;\n\n\n\n\n\nfloat median(float r, float g, float b) {\n\n    return max(min(r, g), min(max(r, g), b));\n\n}\n\nfloat map(float value, float min1, float max1, float min2, float max2) {\n\n  return min2 + (value - min1) * (max2 - min2) / (max1 - min1);\n\n}\n\nvec2 calcTextcoord(vec2 uv) {\n\n  vec2 newUv = vec2(\n\n    map(uv.x, 0., 1., u_edge.x, u_edge.y),\n\n    map(uv.y, 0., 1., u_edge.z, u_edge.w)\n\n  );\n\n  // u_crop.x\n\n  return newUv;\n\n}\n\n\n\nfloat charMask(vec2 uv) {\n\n  \n\n  \n\n  \n\n  vec2 texcoord = calcTextcoord(uv);\n\n  // MSDF -> SDF\n\n  vec3 sample = texture2D(u_fontTexture, texcoord).rgb;\n\n  float sigDist = median(sample.r, sample.g, sample.b) - 0.5;\n\n  sigDist = clamp(sigDist + 0.5, 0., 1.0);\n\n  // Crop\n\n  if (u_crop.x > texcoord.x \n\n  ||  u_crop.y < texcoord.x\n\n  ||  u_crop.z > texcoord.y \n\n  ||  u_crop.w < texcoord.y) {\n\n    sigDist = 0.;\n\n  }\n\n  \n\n  return step(0.5, sigDist);\n\n}\n\n\n\nvoid main() {\n\n  \n\n  vec2 st = v_planecoord;\n\n  st *= (1., 1.);\n\n  \n  vec2 st_r = vec2(\n    st.x+sin(v_planecoord.y*20.+u_time*50.)\n    *0.7 * pow((1.-v_planecoord.y),4.5)\n    *pow((1.-abs(u_position.x-u_1)),15.),\n    map(st.y, 0.33,1., \n    0.3*(1.-abs(u_1-u_position.x)) * u_0*1.2, \n    1.-(0.4*(1.-abs(u_1-u_position.x))) * u_0*0.68\n    )\n  );\n  \n  vec2 st_g = vec2(\n    st.x+sin(v_planecoord.y*20.+u_time*(50.)+2.*u_2)\n    *0.7 * pow((1.-v_planecoord.y),4.5)\n    *pow((1.-abs(u_position.x-u_1)),15.),\n    map(st.y, 0.33,1., \n    0.3*(1.-abs(u_1-u_position.x)) * u_0*1.2, \n    1.-(0.4*(1.-abs(u_1-u_position.x))) * u_0*0.68\n    )\n  );\n  vec2 st_b = vec2(\n    st.x+sin(v_planecoord.y*20.+u_time*(50.)+4.*u_2)\n    *0.7 * pow((1.-v_planecoord.y),4.5)\n    *pow((1.-abs(u_position.x-u_1)),15.),\n    map(st.y, 0.33,1., \n    0.3*(1.-abs(u_1-u_position.x)) * u_0*1.2, \n    1.-(0.4*(1.-abs(u_1-u_position.x))) * u_0*0.68\n    )\n  );\n  \n  vec3 color = vec3(\n    1. - charMask(st_r),\n    1. - charMask(st_g),\n    1. - charMask(st_b)\n    );\n\n  \n\n  gl_FragColor = vec4(color, charMask(st_r)+charMask(st_g)+charMask(st_b));\n\n}\n\n",
      "focused": true,
      "error": false,
      "failed": false
    },
    "O": {
      "letter": "O",
      "texture": "Cooper_Hewitt_Bold",
      "width": "0.4",
      "textureSize": "0.4",
      "alignToTexture": true,
      "u_0": "MOUSE_Y",
      "u_1": "MOUSE_X",
      "u_2": "0.2",
      "vert": "attribute vec4 a_position;\nattribute vec2 a_texcoord;\nattribute vec2 a_planecoord;\n\nuniform mat4 u_matrix;\n\nvarying vec2 v_texcoord;\nvarying vec2 v_planecoord;\n\nvoid main() {\n  gl_Position =  u_matrix * a_position;\n  v_texcoord = a_texcoord;\n  v_planecoord = a_planecoord;\n}",
      "frag": "#extension GL_OES_standard_derivatives : enable\n\nprecision highp float;\n\nuniform sampler2D u_fontTexture;\n\nuniform vec4 u_crop;\n\nuniform float u_0;\n\nuniform float u_1;\n\nuniform float u_2;\n\nuniform float u_time;\n\nuniform vec2 u_position;\n\nuniform vec4 u_edge;\n\n\n\nvarying vec2 v_texcoord;\n\nvarying vec2 v_planecoord;\n\nvarying vec2 v_position;\n\n\n\n\n\nfloat median(float r, float g, float b) {\n\n    return max(min(r, g), min(max(r, g), b));\n\n}\n\nfloat map(float value, float min1, float max1, float min2, float max2) {\n\n  return min2 + (value - min1) * (max2 - min2) / (max1 - min1);\n\n}\n\nvec2 calcTextcoord(vec2 uv) {\n\n  vec2 newUv = vec2(\n\n    map(uv.x, 0., 1., u_edge.x, u_edge.y),\n\n    map(uv.y, 0., 1., u_edge.z, u_edge.w)\n\n  );\n\n  // u_crop.x\n\n  return newUv;\n\n}\n\n\n\nfloat charMask(vec2 uv) {\n\n  \n\n  \n\n  \n\n  vec2 texcoord = calcTextcoord(uv);\n\n  // MSDF -> SDF\n\n  vec3 sample = texture2D(u_fontTexture, texcoord).rgb;\n\n  float sigDist = median(sample.r, sample.g, sample.b) - 0.5;\n\n  sigDist = clamp(sigDist + 0.5, 0., 1.0);\n\n  // Crop\n\n  if (u_crop.x > texcoord.x \n\n  ||  u_crop.y < texcoord.x\n\n  ||  u_crop.z > texcoord.y \n\n  ||  u_crop.w < texcoord.y) {\n\n    sigDist = 0.;\n\n  }\n\n  \n\n  return step(0.5, sigDist);\n\n}\n\n\n\nvoid main() {\n\n  \n\n  vec2 st = v_planecoord;\n\n  st *= (1., 1.);\n\n  \n  vec2 st_r = vec2(\n    st.x+sin(v_planecoord.y*20.+u_time*50.)\n    *0.7 * pow((1.-v_planecoord.y),4.5)\n    *pow((1.-abs(u_position.x-u_1)),15.),\n    map(st.y, 0.33,1., \n    0.3*(1.-abs(u_1-u_position.x)) * u_0*1.2, \n    1.-(0.4*(1.-abs(u_1-u_position.x))) * u_0*0.68\n    )\n  );\n  \n  vec2 st_g = vec2(\n    st.x+sin(v_planecoord.y*20.+u_time*(50.)+2.*u_2)\n    *0.7 * pow((1.-v_planecoord.y),4.5)\n    *pow((1.-abs(u_position.x-u_1)),15.),\n    map(st.y, 0.33,1., \n    0.3*(1.-abs(u_1-u_position.x)) * u_0*1.2, \n    1.-(0.4*(1.-abs(u_1-u_position.x))) * u_0*0.68\n    )\n  );\n  vec2 st_b = vec2(\n    st.x+sin(v_planecoord.y*20.+u_time*(50.)+4.*u_2)\n    *0.7 * pow((1.-v_planecoord.y),4.5)\n    *pow((1.-abs(u_position.x-u_1)),15.),\n    map(st.y, 0.33,1., \n    0.3*(1.-abs(u_1-u_position.x)) * u_0*1.2, \n    1.-(0.4*(1.-abs(u_1-u_position.x))) * u_0*0.68\n    )\n  );\n  \n  vec3 color = vec3(\n    1. - charMask(st_r),\n    1. - charMask(st_g),\n    1. - charMask(st_b)\n    );\n\n  \n\n  gl_FragColor = vec4(color, charMask(st_r)+charMask(st_g)+charMask(st_b));\n\n}\n\n",
      "focused": true,
      "error": false,
      "failed": false
    },
    "P": {
      "letter": "P",
      "texture": "Cooper_Hewitt_Bold",
      "width": "0.4",
      "textureSize": "0.4",
      "alignToTexture": true,
      "u_0": "MOUSE_Y",
      "u_1": "MOUSE_X",
      "u_2": "0.2",
      "vert": "attribute vec4 a_position;\nattribute vec2 a_texcoord;\nattribute vec2 a_planecoord;\n\nuniform mat4 u_matrix;\n\nvarying vec2 v_texcoord;\nvarying vec2 v_planecoord;\n\nvoid main() {\n  gl_Position =  u_matrix * a_position;\n  v_texcoord = a_texcoord;\n  v_planecoord = a_planecoord;\n}",
      "frag": "#extension GL_OES_standard_derivatives : enable\n\nprecision highp float;\n\nuniform sampler2D u_fontTexture;\n\nuniform vec4 u_crop;\n\nuniform float u_0;\n\nuniform float u_1;\n\nuniform float u_2;\n\nuniform float u_time;\n\nuniform vec2 u_position;\n\nuniform vec4 u_edge;\n\n\n\nvarying vec2 v_texcoord;\n\nvarying vec2 v_planecoord;\n\nvarying vec2 v_position;\n\n\n\n\n\nfloat median(float r, float g, float b) {\n\n    return max(min(r, g), min(max(r, g), b));\n\n}\n\nfloat map(float value, float min1, float max1, float min2, float max2) {\n\n  return min2 + (value - min1) * (max2 - min2) / (max1 - min1);\n\n}\n\nvec2 calcTextcoord(vec2 uv) {\n\n  vec2 newUv = vec2(\n\n    map(uv.x, 0., 1., u_edge.x, u_edge.y),\n\n    map(uv.y, 0., 1., u_edge.z, u_edge.w)\n\n  );\n\n  // u_crop.x\n\n  return newUv;\n\n}\n\n\n\nfloat charMask(vec2 uv) {\n\n  \n\n  \n\n  \n\n  vec2 texcoord = calcTextcoord(uv);\n\n  // MSDF -> SDF\n\n  vec3 sample = texture2D(u_fontTexture, texcoord).rgb;\n\n  float sigDist = median(sample.r, sample.g, sample.b) - 0.5;\n\n  sigDist = clamp(sigDist + 0.5, 0., 1.0);\n\n  // Crop\n\n  if (u_crop.x > texcoord.x \n\n  ||  u_crop.y < texcoord.x\n\n  ||  u_crop.z > texcoord.y \n\n  ||  u_crop.w < texcoord.y) {\n\n    sigDist = 0.;\n\n  }\n\n  \n\n  return step(0.5, sigDist);\n\n}\n\n\n\nvoid main() {\n\n  \n\n  vec2 st = v_planecoord;\n\n  st *= (1., 1.);\n\n  \n  vec2 st_r = vec2(\n    st.x+sin(v_planecoord.y*20.+u_time*50.)\n    *0.7 * pow((1.-v_planecoord.y),4.5)\n    *pow((1.-abs(u_position.x-u_1)),15.),\n    map(st.y, 0.33,1., \n    0.3*(1.-abs(u_1-u_position.x)) * u_0*1.2, \n    1.-(0.4*(1.-abs(u_1-u_position.x))) * u_0*0.68\n    )\n  );\n  \n  vec2 st_g = vec2(\n    st.x+sin(v_planecoord.y*20.+u_time*(50.)+2.*u_2)\n    *0.7 * pow((1.-v_planecoord.y),4.5)\n    *pow((1.-abs(u_position.x-u_1)),15.),\n    map(st.y, 0.33,1., \n    0.3*(1.-abs(u_1-u_position.x)) * u_0*1.2, \n    1.-(0.4*(1.-abs(u_1-u_position.x))) * u_0*0.68\n    )\n  );\n  vec2 st_b = vec2(\n    st.x+sin(v_planecoord.y*20.+u_time*(50.)+4.*u_2)\n    *0.7 * pow((1.-v_planecoord.y),4.5)\n    *pow((1.-abs(u_position.x-u_1)),15.),\n    map(st.y, 0.33,1., \n    0.3*(1.-abs(u_1-u_position.x)) * u_0*1.2, \n    1.-(0.4*(1.-abs(u_1-u_position.x))) * u_0*0.68\n    )\n  );\n  \n  vec3 color = vec3(\n    1. - charMask(st_r),\n    1. - charMask(st_g),\n    1. - charMask(st_b)\n    );\n\n  \n\n  gl_FragColor = vec4(color, charMask(st_r)+charMask(st_g)+charMask(st_b));\n\n}\n\n",
      "focused": true,
      "error": false,
      "failed": false
    },
    "Q": {
      "letter": "Q",
      "texture": "Cooper_Hewitt_Bold",
      "width": "0.4",
      "textureSize": "0.4",
      "alignToTexture": true,
      "u_0": "MOUSE_Y",
      "u_1": "MOUSE_X",
      "u_2": "0.2",
      "vert": "attribute vec4 a_position;\nattribute vec2 a_texcoord;\nattribute vec2 a_planecoord;\n\nuniform mat4 u_matrix;\n\nvarying vec2 v_texcoord;\nvarying vec2 v_planecoord;\n\nvoid main() {\n  gl_Position =  u_matrix * a_position;\n  v_texcoord = a_texcoord;\n  v_planecoord = a_planecoord;\n}",
      "frag": "#extension GL_OES_standard_derivatives : enable\n\nprecision highp float;\n\nuniform sampler2D u_fontTexture;\n\nuniform vec4 u_crop;\n\nuniform float u_0;\n\nuniform float u_1;\n\nuniform float u_2;\n\nuniform float u_time;\n\nuniform vec2 u_position;\n\nuniform vec4 u_edge;\n\n\n\nvarying vec2 v_texcoord;\n\nvarying vec2 v_planecoord;\n\nvarying vec2 v_position;\n\n\n\n\n\nfloat median(float r, float g, float b) {\n\n    return max(min(r, g), min(max(r, g), b));\n\n}\n\nfloat map(float value, float min1, float max1, float min2, float max2) {\n\n  return min2 + (value - min1) * (max2 - min2) / (max1 - min1);\n\n}\n\nvec2 calcTextcoord(vec2 uv) {\n\n  vec2 newUv = vec2(\n\n    map(uv.x, 0., 1., u_edge.x, u_edge.y),\n\n    map(uv.y, 0., 1., u_edge.z, u_edge.w)\n\n  );\n\n  // u_crop.x\n\n  return newUv;\n\n}\n\n\n\nfloat charMask(vec2 uv) {\n\n  \n\n  \n\n  \n\n  vec2 texcoord = calcTextcoord(uv);\n\n  // MSDF -> SDF\n\n  vec3 sample = texture2D(u_fontTexture, texcoord).rgb;\n\n  float sigDist = median(sample.r, sample.g, sample.b) - 0.5;\n\n  sigDist = clamp(sigDist + 0.5, 0., 1.0);\n\n  // Crop\n\n  if (u_crop.x > texcoord.x \n\n  ||  u_crop.y < texcoord.x\n\n  ||  u_crop.z > texcoord.y \n\n  ||  u_crop.w < texcoord.y) {\n\n    sigDist = 0.;\n\n  }\n\n  \n\n  return step(0.5, sigDist);\n\n}\n\n\n\nvoid main() {\n\n  \n\n  vec2 st = v_planecoord;\n\n  st *= (1., 1.);\n\n  \n  vec2 st_r = vec2(\n    st.x+sin(v_planecoord.y*20.+u_time*50.)\n    *0.7 * pow((1.-v_planecoord.y),4.5)\n    *pow((1.-abs(u_position.x-u_1)),15.),\n    map(st.y, 0.33,1., \n    0.3*(1.-abs(u_1-u_position.x)) * u_0*1.2, \n    1.-(0.4*(1.-abs(u_1-u_position.x))) * u_0*0.68\n    )\n  );\n  \n  vec2 st_g = vec2(\n    st.x+sin(v_planecoord.y*20.+u_time*(50.)+2.*u_2)\n    *0.7 * pow((1.-v_planecoord.y),4.5)\n    *pow((1.-abs(u_position.x-u_1)),15.),\n    map(st.y, 0.33,1., \n    0.3*(1.-abs(u_1-u_position.x)) * u_0*1.2, \n    1.-(0.4*(1.-abs(u_1-u_position.x))) * u_0*0.68\n    )\n  );\n  vec2 st_b = vec2(\n    st.x+sin(v_planecoord.y*20.+u_time*(50.)+4.*u_2)\n    *0.7 * pow((1.-v_planecoord.y),4.5)\n    *pow((1.-abs(u_position.x-u_1)),15.),\n    map(st.y, 0.33,1., \n    0.3*(1.-abs(u_1-u_position.x)) * u_0*1.2, \n    1.-(0.4*(1.-abs(u_1-u_position.x))) * u_0*0.68\n    )\n  );\n  \n  vec3 color = vec3(\n    1. - charMask(st_r),\n    1. - charMask(st_g),\n    1. - charMask(st_b)\n    );\n\n  \n\n  gl_FragColor = vec4(color, charMask(st_r)+charMask(st_g)+charMask(st_b));\n\n}\n\n",
      "focused": true,
      "error": false,
      "failed": false
    },
    "R": {
      "letter": "R",
      "texture": "Cooper_Hewitt_Bold",
      "width": "0.4",
      "textureSize": "0.4",
      "alignToTexture": true,
      "u_0": "MOUSE_Y",
      "u_1": "MOUSE_X",
      "u_2": "0.2",
      "vert": "attribute vec4 a_position;\nattribute vec2 a_texcoord;\nattribute vec2 a_planecoord;\n\nuniform mat4 u_matrix;\n\nvarying vec2 v_texcoord;\nvarying vec2 v_planecoord;\n\nvoid main() {\n  gl_Position =  u_matrix * a_position;\n  v_texcoord = a_texcoord;\n  v_planecoord = a_planecoord;\n}",
      "frag": "#extension GL_OES_standard_derivatives : enable\n\nprecision highp float;\n\nuniform sampler2D u_fontTexture;\n\nuniform vec4 u_crop;\n\nuniform float u_0;\n\nuniform float u_1;\n\nuniform float u_2;\n\nuniform float u_time;\n\nuniform vec2 u_position;\n\nuniform vec4 u_edge;\n\n\n\nvarying vec2 v_texcoord;\n\nvarying vec2 v_planecoord;\n\nvarying vec2 v_position;\n\n\n\n\n\nfloat median(float r, float g, float b) {\n\n    return max(min(r, g), min(max(r, g), b));\n\n}\n\nfloat map(float value, float min1, float max1, float min2, float max2) {\n\n  return min2 + (value - min1) * (max2 - min2) / (max1 - min1);\n\n}\n\nvec2 calcTextcoord(vec2 uv) {\n\n  vec2 newUv = vec2(\n\n    map(uv.x, 0., 1., u_edge.x, u_edge.y),\n\n    map(uv.y, 0., 1., u_edge.z, u_edge.w)\n\n  );\n\n  // u_crop.x\n\n  return newUv;\n\n}\n\n\n\nfloat charMask(vec2 uv) {\n\n  \n\n  \n\n  \n\n  vec2 texcoord = calcTextcoord(uv);\n\n  // MSDF -> SDF\n\n  vec3 sample = texture2D(u_fontTexture, texcoord).rgb;\n\n  float sigDist = median(sample.r, sample.g, sample.b) - 0.5;\n\n  sigDist = clamp(sigDist + 0.5, 0., 1.0);\n\n  // Crop\n\n  if (u_crop.x > texcoord.x \n\n  ||  u_crop.y < texcoord.x\n\n  ||  u_crop.z > texcoord.y \n\n  ||  u_crop.w < texcoord.y) {\n\n    sigDist = 0.;\n\n  }\n\n  \n\n  return step(0.5, sigDist);\n\n}\n\n\n\nvoid main() {\n\n  \n\n  vec2 st = v_planecoord;\n\n  st *= (1., 1.);\n\n  \n  vec2 st_r = vec2(\n    st.x+sin(v_planecoord.y*20.+u_time*50.)\n    *0.7 * pow((1.-v_planecoord.y),4.5)\n    *pow((1.-abs(u_position.x-u_1)),15.),\n    map(st.y, 0.33,1., \n    0.3*(1.-abs(u_1-u_position.x)) * u_0*1.2, \n    1.-(0.4*(1.-abs(u_1-u_position.x))) * u_0*0.68\n    )\n  );\n  \n  vec2 st_g = vec2(\n    st.x+sin(v_planecoord.y*20.+u_time*(50.)+2.*u_2)\n    *0.7 * pow((1.-v_planecoord.y),4.5)\n    *pow((1.-abs(u_position.x-u_1)),15.),\n    map(st.y, 0.33,1., \n    0.3*(1.-abs(u_1-u_position.x)) * u_0*1.2, \n    1.-(0.4*(1.-abs(u_1-u_position.x))) * u_0*0.68\n    )\n  );\n  vec2 st_b = vec2(\n    st.x+sin(v_planecoord.y*20.+u_time*(50.)+4.*u_2)\n    *0.7 * pow((1.-v_planecoord.y),4.5)\n    *pow((1.-abs(u_position.x-u_1)),15.),\n    map(st.y, 0.33,1., \n    0.3*(1.-abs(u_1-u_position.x)) * u_0*1.2, \n    1.-(0.4*(1.-abs(u_1-u_position.x))) * u_0*0.68\n    )\n  );\n  \n  vec3 color = vec3(\n    1. - charMask(st_r),\n    1. - charMask(st_g),\n    1. - charMask(st_b)\n    );\n\n  \n\n  gl_FragColor = vec4(color, charMask(st_r)+charMask(st_g)+charMask(st_b));\n\n}\n\n",
      "focused": true,
      "error": false,
      "failed": false
    },
    "S": {
      "letter": "S",
      "texture": "Cooper_Hewitt_Bold",
      "width": "0.4",
      "textureSize": "0.4",
      "alignToTexture": true,
      "u_0": "MOUSE_Y",
      "u_1": "MOUSE_X",
      "u_2": "0.2",
      "vert": "attribute vec4 a_position;\nattribute vec2 a_texcoord;\nattribute vec2 a_planecoord;\n\nuniform mat4 u_matrix;\n\nvarying vec2 v_texcoord;\nvarying vec2 v_planecoord;\n\nvoid main() {\n  gl_Position =  u_matrix * a_position;\n  v_texcoord = a_texcoord;\n  v_planecoord = a_planecoord;\n}",
      "frag": "#extension GL_OES_standard_derivatives : enable\n\nprecision highp float;\n\nuniform sampler2D u_fontTexture;\n\nuniform vec4 u_crop;\n\nuniform float u_0;\n\nuniform float u_1;\n\nuniform float u_2;\n\nuniform float u_time;\n\nuniform vec2 u_position;\n\nuniform vec4 u_edge;\n\n\n\nvarying vec2 v_texcoord;\n\nvarying vec2 v_planecoord;\n\nvarying vec2 v_position;\n\n\n\n\n\nfloat median(float r, float g, float b) {\n\n    return max(min(r, g), min(max(r, g), b));\n\n}\n\nfloat map(float value, float min1, float max1, float min2, float max2) {\n\n  return min2 + (value - min1) * (max2 - min2) / (max1 - min1);\n\n}\n\nvec2 calcTextcoord(vec2 uv) {\n\n  vec2 newUv = vec2(\n\n    map(uv.x, 0., 1., u_edge.x, u_edge.y),\n\n    map(uv.y, 0., 1., u_edge.z, u_edge.w)\n\n  );\n\n  // u_crop.x\n\n  return newUv;\n\n}\n\n\n\nfloat charMask(vec2 uv) {\n\n  \n\n  \n\n  \n\n  vec2 texcoord = calcTextcoord(uv);\n\n  // MSDF -> SDF\n\n  vec3 sample = texture2D(u_fontTexture, texcoord).rgb;\n\n  float sigDist = median(sample.r, sample.g, sample.b) - 0.5;\n\n  sigDist = clamp(sigDist + 0.5, 0., 1.0);\n\n  // Crop\n\n  if (u_crop.x > texcoord.x \n\n  ||  u_crop.y < texcoord.x\n\n  ||  u_crop.z > texcoord.y \n\n  ||  u_crop.w < texcoord.y) {\n\n    sigDist = 0.;\n\n  }\n\n  \n\n  return step(0.5, sigDist);\n\n}\n\n\n\nvoid main() {\n\n  \n\n  vec2 st = v_planecoord;\n\n  st *= (1., 1.);\n\n  \n  vec2 st_r = vec2(\n    st.x+sin(v_planecoord.y*20.+u_time*50.)\n    *0.7 * pow((1.-v_planecoord.y),4.5)\n    *pow((1.-abs(u_position.x-u_1)),15.),\n    map(st.y, 0.33,1., \n    0.3*(1.-abs(u_1-u_position.x)) * u_0*1.2, \n    1.-(0.4*(1.-abs(u_1-u_position.x))) * u_0*0.68\n    )\n  );\n  \n  vec2 st_g = vec2(\n    st.x+sin(v_planecoord.y*20.+u_time*(50.)+2.*u_2)\n    *0.7 * pow((1.-v_planecoord.y),4.5)\n    *pow((1.-abs(u_position.x-u_1)),15.),\n    map(st.y, 0.33,1., \n    0.3*(1.-abs(u_1-u_position.x)) * u_0*1.2, \n    1.-(0.4*(1.-abs(u_1-u_position.x))) * u_0*0.68\n    )\n  );\n  vec2 st_b = vec2(\n    st.x+sin(v_planecoord.y*20.+u_time*(50.)+4.*u_2)\n    *0.7 * pow((1.-v_planecoord.y),4.5)\n    *pow((1.-abs(u_position.x-u_1)),15.),\n    map(st.y, 0.33,1., \n    0.3*(1.-abs(u_1-u_position.x)) * u_0*1.2, \n    1.-(0.4*(1.-abs(u_1-u_position.x))) * u_0*0.68\n    )\n  );\n  \n  vec3 color = vec3(\n    1. - charMask(st_r),\n    1. - charMask(st_g),\n    1. - charMask(st_b)\n    );\n\n  \n\n  gl_FragColor = vec4(color, charMask(st_r)+charMask(st_g)+charMask(st_b));\n\n}\n\n",
      "focused": true,
      "error": false,
      "failed": false
    },
    "T": {
      "letter": "T",
      "texture": "Cooper_Hewitt_Bold",
      "width": "0.4",
      "textureSize": "0.4",
      "alignToTexture": true,
      "u_0": "MOUSE_Y",
      "u_1": "MOUSE_X",
      "u_2": "0.2",
      "vert": "attribute vec4 a_position;\nattribute vec2 a_texcoord;\nattribute vec2 a_planecoord;\n\nuniform mat4 u_matrix;\n\nvarying vec2 v_texcoord;\nvarying vec2 v_planecoord;\n\nvoid main() {\n  gl_Position =  u_matrix * a_position;\n  v_texcoord = a_texcoord;\n  v_planecoord = a_planecoord;\n}",
      "frag": "#extension GL_OES_standard_derivatives : enable\n\nprecision highp float;\n\nuniform sampler2D u_fontTexture;\n\nuniform vec4 u_crop;\n\nuniform float u_0;\n\nuniform float u_1;\n\nuniform float u_2;\n\nuniform float u_time;\n\nuniform vec2 u_position;\n\nuniform vec4 u_edge;\n\n\n\nvarying vec2 v_texcoord;\n\nvarying vec2 v_planecoord;\n\nvarying vec2 v_position;\n\n\n\n\n\nfloat median(float r, float g, float b) {\n\n    return max(min(r, g), min(max(r, g), b));\n\n}\n\nfloat map(float value, float min1, float max1, float min2, float max2) {\n\n  return min2 + (value - min1) * (max2 - min2) / (max1 - min1);\n\n}\n\nvec2 calcTextcoord(vec2 uv) {\n\n  vec2 newUv = vec2(\n\n    map(uv.x, 0., 1., u_edge.x, u_edge.y),\n\n    map(uv.y, 0., 1., u_edge.z, u_edge.w)\n\n  );\n\n  // u_crop.x\n\n  return newUv;\n\n}\n\n\n\nfloat charMask(vec2 uv) {\n\n  \n\n  \n\n  \n\n  vec2 texcoord = calcTextcoord(uv);\n\n  // MSDF -> SDF\n\n  vec3 sample = texture2D(u_fontTexture, texcoord).rgb;\n\n  float sigDist = median(sample.r, sample.g, sample.b) - 0.5;\n\n  sigDist = clamp(sigDist + 0.5, 0., 1.0);\n\n  // Crop\n\n  if (u_crop.x > texcoord.x \n\n  ||  u_crop.y < texcoord.x\n\n  ||  u_crop.z > texcoord.y \n\n  ||  u_crop.w < texcoord.y) {\n\n    sigDist = 0.;\n\n  }\n\n  \n\n  return step(0.5, sigDist);\n\n}\n\n\n\nvoid main() {\n\n  \n\n  vec2 st = v_planecoord;\n\n  st *= (1., 1.);\n\n  \n  vec2 st_r = vec2(\n    st.x+sin(v_planecoord.y*20.+u_time*50.)\n    *0.7 * pow((1.-v_planecoord.y),4.5)\n    *pow((1.-abs(u_position.x-u_1)),15.),\n    map(st.y, 0.33,1., \n    0.3*(1.-abs(u_1-u_position.x)) * u_0*1.2, \n    1.-(0.4*(1.-abs(u_1-u_position.x))) * u_0*0.68\n    )\n  );\n  \n  vec2 st_g = vec2(\n    st.x+sin(v_planecoord.y*20.+u_time*(50.)+2.*u_2)\n    *0.7 * pow((1.-v_planecoord.y),4.5)\n    *pow((1.-abs(u_position.x-u_1)),15.),\n    map(st.y, 0.33,1., \n    0.3*(1.-abs(u_1-u_position.x)) * u_0*1.2, \n    1.-(0.4*(1.-abs(u_1-u_position.x))) * u_0*0.68\n    )\n  );\n  vec2 st_b = vec2(\n    st.x+sin(v_planecoord.y*20.+u_time*(50.)+4.*u_2)\n    *0.7 * pow((1.-v_planecoord.y),4.5)\n    *pow((1.-abs(u_position.x-u_1)),15.),\n    map(st.y, 0.33,1., \n    0.3*(1.-abs(u_1-u_position.x)) * u_0*1.2, \n    1.-(0.4*(1.-abs(u_1-u_position.x))) * u_0*0.68\n    )\n  );\n  \n  vec3 color = vec3(\n    1. - charMask(st_r),\n    1. - charMask(st_g),\n    1. - charMask(st_b)\n    );\n\n  \n\n  gl_FragColor = vec4(color, charMask(st_r)+charMask(st_g)+charMask(st_b));\n\n}\n\n",
      "focused": true,
      "error": false,
      "failed": false
    },
    "U": {
      "letter": "U",
      "texture": "Cooper_Hewitt_Bold",
      "width": "0.4",
      "textureSize": "0.4",
      "alignToTexture": true,
      "u_0": "MOUSE_Y",
      "u_1": "MOUSE_X",
      "u_2": "0.2",
      "vert": "attribute vec4 a_position;\nattribute vec2 a_texcoord;\nattribute vec2 a_planecoord;\n\nuniform mat4 u_matrix;\n\nvarying vec2 v_texcoord;\nvarying vec2 v_planecoord;\n\nvoid main() {\n  gl_Position =  u_matrix * a_position;\n  v_texcoord = a_texcoord;\n  v_planecoord = a_planecoord;\n}",
      "frag": "#extension GL_OES_standard_derivatives : enable\n\nprecision highp float;\n\nuniform sampler2D u_fontTexture;\n\nuniform vec4 u_crop;\n\nuniform float u_0;\n\nuniform float u_1;\n\nuniform float u_2;\n\nuniform float u_time;\n\nuniform vec2 u_position;\n\nuniform vec4 u_edge;\n\n\n\nvarying vec2 v_texcoord;\n\nvarying vec2 v_planecoord;\n\nvarying vec2 v_position;\n\n\n\n\n\nfloat median(float r, float g, float b) {\n\n    return max(min(r, g), min(max(r, g), b));\n\n}\n\nfloat map(float value, float min1, float max1, float min2, float max2) {\n\n  return min2 + (value - min1) * (max2 - min2) / (max1 - min1);\n\n}\n\nvec2 calcTextcoord(vec2 uv) {\n\n  vec2 newUv = vec2(\n\n    map(uv.x, 0., 1., u_edge.x, u_edge.y),\n\n    map(uv.y, 0., 1., u_edge.z, u_edge.w)\n\n  );\n\n  // u_crop.x\n\n  return newUv;\n\n}\n\n\n\nfloat charMask(vec2 uv) {\n\n  \n\n  \n\n  \n\n  vec2 texcoord = calcTextcoord(uv);\n\n  // MSDF -> SDF\n\n  vec3 sample = texture2D(u_fontTexture, texcoord).rgb;\n\n  float sigDist = median(sample.r, sample.g, sample.b) - 0.5;\n\n  sigDist = clamp(sigDist + 0.5, 0., 1.0);\n\n  // Crop\n\n  if (u_crop.x > texcoord.x \n\n  ||  u_crop.y < texcoord.x\n\n  ||  u_crop.z > texcoord.y \n\n  ||  u_crop.w < texcoord.y) {\n\n    sigDist = 0.;\n\n  }\n\n  \n\n  return step(0.5, sigDist);\n\n}\n\n\n\nvoid main() {\n\n  \n\n  vec2 st = v_planecoord;\n\n  st *= (1., 1.);\n\n  \n  vec2 st_r = vec2(\n    st.x+sin(v_planecoord.y*20.+u_time*50.)\n    *0.7 * pow((1.-v_planecoord.y),4.5)\n    *pow((1.-abs(u_position.x-u_1)),15.),\n    map(st.y, 0.33,1., \n    0.3*(1.-abs(u_1-u_position.x)) * u_0*1.2, \n    1.-(0.4*(1.-abs(u_1-u_position.x))) * u_0*0.68\n    )\n  );\n  \n  vec2 st_g = vec2(\n    st.x+sin(v_planecoord.y*20.+u_time*(50.)+2.*u_2)\n    *0.7 * pow((1.-v_planecoord.y),4.5)\n    *pow((1.-abs(u_position.x-u_1)),15.),\n    map(st.y, 0.33,1., \n    0.3*(1.-abs(u_1-u_position.x)) * u_0*1.2, \n    1.-(0.4*(1.-abs(u_1-u_position.x))) * u_0*0.68\n    )\n  );\n  vec2 st_b = vec2(\n    st.x+sin(v_planecoord.y*20.+u_time*(50.)+4.*u_2)\n    *0.7 * pow((1.-v_planecoord.y),4.5)\n    *pow((1.-abs(u_position.x-u_1)),15.),\n    map(st.y, 0.33,1., \n    0.3*(1.-abs(u_1-u_position.x)) * u_0*1.2, \n    1.-(0.4*(1.-abs(u_1-u_position.x))) * u_0*0.68\n    )\n  );\n  \n  vec3 color = vec3(\n    1. - charMask(st_r),\n    1. - charMask(st_g),\n    1. - charMask(st_b)\n    );\n\n  \n\n  gl_FragColor = vec4(color, charMask(st_r)+charMask(st_g)+charMask(st_b));\n\n}\n\n",
      "focused": true,
      "error": false,
      "failed": false
    },
    "V": {
      "letter": "V",
      "texture": "Cooper_Hewitt_Bold",
      "width": "0.4",
      "textureSize": "0.4",
      "alignToTexture": true,
      "u_0": "MOUSE_Y",
      "u_1": "MOUSE_X",
      "u_2": "0.2",
      "vert": "attribute vec4 a_position;\nattribute vec2 a_texcoord;\nattribute vec2 a_planecoord;\n\nuniform mat4 u_matrix;\n\nvarying vec2 v_texcoord;\nvarying vec2 v_planecoord;\n\nvoid main() {\n  gl_Position =  u_matrix * a_position;\n  v_texcoord = a_texcoord;\n  v_planecoord = a_planecoord;\n}",
      "frag": "#extension GL_OES_standard_derivatives : enable\n\nprecision highp float;\n\nuniform sampler2D u_fontTexture;\n\nuniform vec4 u_crop;\n\nuniform float u_0;\n\nuniform float u_1;\n\nuniform float u_2;\n\nuniform float u_time;\n\nuniform vec2 u_position;\n\nuniform vec4 u_edge;\n\n\n\nvarying vec2 v_texcoord;\n\nvarying vec2 v_planecoord;\n\nvarying vec2 v_position;\n\n\n\n\n\nfloat median(float r, float g, float b) {\n\n    return max(min(r, g), min(max(r, g), b));\n\n}\n\nfloat map(float value, float min1, float max1, float min2, float max2) {\n\n  return min2 + (value - min1) * (max2 - min2) / (max1 - min1);\n\n}\n\nvec2 calcTextcoord(vec2 uv) {\n\n  vec2 newUv = vec2(\n\n    map(uv.x, 0., 1., u_edge.x, u_edge.y),\n\n    map(uv.y, 0., 1., u_edge.z, u_edge.w)\n\n  );\n\n  // u_crop.x\n\n  return newUv;\n\n}\n\n\n\nfloat charMask(vec2 uv) {\n\n  \n\n  \n\n  \n\n  vec2 texcoord = calcTextcoord(uv);\n\n  // MSDF -> SDF\n\n  vec3 sample = texture2D(u_fontTexture, texcoord).rgb;\n\n  float sigDist = median(sample.r, sample.g, sample.b) - 0.5;\n\n  sigDist = clamp(sigDist + 0.5, 0., 1.0);\n\n  // Crop\n\n  if (u_crop.x > texcoord.x \n\n  ||  u_crop.y < texcoord.x\n\n  ||  u_crop.z > texcoord.y \n\n  ||  u_crop.w < texcoord.y) {\n\n    sigDist = 0.;\n\n  }\n\n  \n\n  return step(0.5, sigDist);\n\n}\n\n\n\nvoid main() {\n\n  \n\n  vec2 st = v_planecoord;\n\n  st *= (1., 1.);\n\n  \n  vec2 st_r = vec2(\n    st.x+sin(v_planecoord.y*20.+u_time*50.)\n    *0.7 * pow((1.-v_planecoord.y),4.5)\n    *pow((1.-abs(u_position.x-u_1)),15.),\n    map(st.y, 0.33,1., \n    0.3*(1.-abs(u_1-u_position.x)) * u_0*1.2, \n    1.-(0.4*(1.-abs(u_1-u_position.x))) * u_0*0.68\n    )\n  );\n  \n  vec2 st_g = vec2(\n    st.x+sin(v_planecoord.y*20.+u_time*(50.)+2.*u_2)\n    *0.7 * pow((1.-v_planecoord.y),4.5)\n    *pow((1.-abs(u_position.x-u_1)),15.),\n    map(st.y, 0.33,1., \n    0.3*(1.-abs(u_1-u_position.x)) * u_0*1.2, \n    1.-(0.4*(1.-abs(u_1-u_position.x))) * u_0*0.68\n    )\n  );\n  vec2 st_b = vec2(\n    st.x+sin(v_planecoord.y*20.+u_time*(50.)+4.*u_2)\n    *0.7 * pow((1.-v_planecoord.y),4.5)\n    *pow((1.-abs(u_position.x-u_1)),15.),\n    map(st.y, 0.33,1., \n    0.3*(1.-abs(u_1-u_position.x)) * u_0*1.2, \n    1.-(0.4*(1.-abs(u_1-u_position.x))) * u_0*0.68\n    )\n  );\n  \n  vec3 color = vec3(\n    1. - charMask(st_r),\n    1. - charMask(st_g),\n    1. - charMask(st_b)\n    );\n\n  \n\n  gl_FragColor = vec4(color, charMask(st_r)+charMask(st_g)+charMask(st_b));\n\n}\n\n",
      "focused": true,
      "error": false,
      "failed": false
    },
    "W": {
      "letter": "W",
      "texture": "Cooper_Hewitt_Bold",
      "width": "0.4",
      "textureSize": "0.4",
      "alignToTexture": true,
      "u_0": "MOUSE_Y",
      "u_1": "MOUSE_X",
      "u_2": "0.2",
      "vert": "attribute vec4 a_position;\nattribute vec2 a_texcoord;\nattribute vec2 a_planecoord;\n\nuniform mat4 u_matrix;\n\nvarying vec2 v_texcoord;\nvarying vec2 v_planecoord;\n\nvoid main() {\n  gl_Position =  u_matrix * a_position;\n  v_texcoord = a_texcoord;\n  v_planecoord = a_planecoord;\n}",
      "frag": "#extension GL_OES_standard_derivatives : enable\n\nprecision highp float;\n\nuniform sampler2D u_fontTexture;\n\nuniform vec4 u_crop;\n\nuniform float u_0;\n\nuniform float u_1;\n\nuniform float u_2;\n\nuniform float u_time;\n\nuniform vec2 u_position;\n\nuniform vec4 u_edge;\n\n\n\nvarying vec2 v_texcoord;\n\nvarying vec2 v_planecoord;\n\nvarying vec2 v_position;\n\n\n\n\n\nfloat median(float r, float g, float b) {\n\n    return max(min(r, g), min(max(r, g), b));\n\n}\n\nfloat map(float value, float min1, float max1, float min2, float max2) {\n\n  return min2 + (value - min1) * (max2 - min2) / (max1 - min1);\n\n}\n\nvec2 calcTextcoord(vec2 uv) {\n\n  vec2 newUv = vec2(\n\n    map(uv.x, 0., 1., u_edge.x, u_edge.y),\n\n    map(uv.y, 0., 1., u_edge.z, u_edge.w)\n\n  );\n\n  // u_crop.x\n\n  return newUv;\n\n}\n\n\n\nfloat charMask(vec2 uv) {\n\n  \n\n  \n\n  \n\n  vec2 texcoord = calcTextcoord(uv);\n\n  // MSDF -> SDF\n\n  vec3 sample = texture2D(u_fontTexture, texcoord).rgb;\n\n  float sigDist = median(sample.r, sample.g, sample.b) - 0.5;\n\n  sigDist = clamp(sigDist + 0.5, 0., 1.0);\n\n  // Crop\n\n  if (u_crop.x > texcoord.x \n\n  ||  u_crop.y < texcoord.x\n\n  ||  u_crop.z > texcoord.y \n\n  ||  u_crop.w < texcoord.y) {\n\n    sigDist = 0.;\n\n  }\n\n  \n\n  return step(0.5, sigDist);\n\n}\n\n\n\nvoid main() {\n\n  \n\n  vec2 st = v_planecoord;\n\n  st *= (1., 1.);\n\n  \n  vec2 st_r = vec2(\n    st.x+sin(v_planecoord.y*20.+u_time*50.)\n    *0.7 * pow((1.-v_planecoord.y),4.5)\n    *pow((1.-abs(u_position.x-u_1)),15.),\n    map(st.y, 0.33,1., \n    0.3*(1.-abs(u_1-u_position.x)) * u_0*1.2, \n    1.-(0.4*(1.-abs(u_1-u_position.x))) * u_0*0.68\n    )\n  );\n  \n  vec2 st_g = vec2(\n    st.x+sin(v_planecoord.y*20.+u_time*(50.)+2.*u_2)\n    *0.7 * pow((1.-v_planecoord.y),4.5)\n    *pow((1.-abs(u_position.x-u_1)),15.),\n    map(st.y, 0.33,1., \n    0.3*(1.-abs(u_1-u_position.x)) * u_0*1.2, \n    1.-(0.4*(1.-abs(u_1-u_position.x))) * u_0*0.68\n    )\n  );\n  vec2 st_b = vec2(\n    st.x+sin(v_planecoord.y*20.+u_time*(50.)+4.*u_2)\n    *0.7 * pow((1.-v_planecoord.y),4.5)\n    *pow((1.-abs(u_position.x-u_1)),15.),\n    map(st.y, 0.33,1., \n    0.3*(1.-abs(u_1-u_position.x)) * u_0*1.2, \n    1.-(0.4*(1.-abs(u_1-u_position.x))) * u_0*0.68\n    )\n  );\n  \n  vec3 color = vec3(\n    1. - charMask(st_r),\n    1. - charMask(st_g),\n    1. - charMask(st_b)\n    );\n\n  \n\n  gl_FragColor = vec4(color, charMask(st_r)+charMask(st_g)+charMask(st_b));\n\n}\n\n",
      "focused": true,
      "error": false,
      "failed": false
    },
    "X": {
      "letter": "X",
      "texture": "Cooper_Hewitt_Bold",
      "width": "0.4",
      "textureSize": "0.4",
      "alignToTexture": true,
      "u_0": "MOUSE_Y",
      "u_1": "MOUSE_X",
      "u_2": "0.2",
      "vert": "attribute vec4 a_position;\nattribute vec2 a_texcoord;\nattribute vec2 a_planecoord;\n\nuniform mat4 u_matrix;\n\nvarying vec2 v_texcoord;\nvarying vec2 v_planecoord;\n\nvoid main() {\n  gl_Position =  u_matrix * a_position;\n  v_texcoord = a_texcoord;\n  v_planecoord = a_planecoord;\n}",
      "frag": "#extension GL_OES_standard_derivatives : enable\n\nprecision highp float;\n\nuniform sampler2D u_fontTexture;\n\nuniform vec4 u_crop;\n\nuniform float u_0;\n\nuniform float u_1;\n\nuniform float u_2;\n\nuniform float u_time;\n\nuniform vec2 u_position;\n\nuniform vec4 u_edge;\n\n\n\nvarying vec2 v_texcoord;\n\nvarying vec2 v_planecoord;\n\nvarying vec2 v_position;\n\n\n\n\n\nfloat median(float r, float g, float b) {\n\n    return max(min(r, g), min(max(r, g), b));\n\n}\n\nfloat map(float value, float min1, float max1, float min2, float max2) {\n\n  return min2 + (value - min1) * (max2 - min2) / (max1 - min1);\n\n}\n\nvec2 calcTextcoord(vec2 uv) {\n\n  vec2 newUv = vec2(\n\n    map(uv.x, 0., 1., u_edge.x, u_edge.y),\n\n    map(uv.y, 0., 1., u_edge.z, u_edge.w)\n\n  );\n\n  // u_crop.x\n\n  return newUv;\n\n}\n\n\n\nfloat charMask(vec2 uv) {\n\n  \n\n  \n\n  \n\n  vec2 texcoord = calcTextcoord(uv);\n\n  // MSDF -> SDF\n\n  vec3 sample = texture2D(u_fontTexture, texcoord).rgb;\n\n  float sigDist = median(sample.r, sample.g, sample.b) - 0.5;\n\n  sigDist = clamp(sigDist + 0.5, 0., 1.0);\n\n  // Crop\n\n  if (u_crop.x > texcoord.x \n\n  ||  u_crop.y < texcoord.x\n\n  ||  u_crop.z > texcoord.y \n\n  ||  u_crop.w < texcoord.y) {\n\n    sigDist = 0.;\n\n  }\n\n  \n\n  return step(0.5, sigDist);\n\n}\n\n\n\nvoid main() {\n\n  \n\n  vec2 st = v_planecoord;\n\n  st *= (1., 1.);\n\n  \n  vec2 st_r = vec2(\n    st.x+sin(v_planecoord.y*20.+u_time*50.)\n    *0.7 * pow((1.-v_planecoord.y),4.5)\n    *pow((1.-abs(u_position.x-u_1)),15.),\n    map(st.y, 0.33,1., \n    0.3*(1.-abs(u_1-u_position.x)) * u_0*1.2, \n    1.-(0.4*(1.-abs(u_1-u_position.x))) * u_0*0.68\n    )\n  );\n  \n  vec2 st_g = vec2(\n    st.x+sin(v_planecoord.y*20.+u_time*(50.)+2.*u_2)\n    *0.7 * pow((1.-v_planecoord.y),4.5)\n    *pow((1.-abs(u_position.x-u_1)),15.),\n    map(st.y, 0.33,1., \n    0.3*(1.-abs(u_1-u_position.x)) * u_0*1.2, \n    1.-(0.4*(1.-abs(u_1-u_position.x))) * u_0*0.68\n    )\n  );\n  vec2 st_b = vec2(\n    st.x+sin(v_planecoord.y*20.+u_time*(50.)+4.*u_2)\n    *0.7 * pow((1.-v_planecoord.y),4.5)\n    *pow((1.-abs(u_position.x-u_1)),15.),\n    map(st.y, 0.33,1., \n    0.3*(1.-abs(u_1-u_position.x)) * u_0*1.2, \n    1.-(0.4*(1.-abs(u_1-u_position.x))) * u_0*0.68\n    )\n  );\n  \n  vec3 color = vec3(\n    1. - charMask(st_r),\n    1. - charMask(st_g),\n    1. - charMask(st_b)\n    );\n\n  \n\n  gl_FragColor = vec4(color, charMask(st_r)+charMask(st_g)+charMask(st_b));\n\n}\n\n",
      "focused": true,
      "error": false,
      "failed": false
    },
    "Y": {
      "letter": "Y",
      "texture": "Cooper_Hewitt_Bold",
      "width": "0.4",
      "textureSize": "0.4",
      "alignToTexture": true,
      "u_0": "MOUSE_Y",
      "u_1": "MOUSE_X",
      "u_2": "0.2",
      "vert": "attribute vec4 a_position;\nattribute vec2 a_texcoord;\nattribute vec2 a_planecoord;\n\nuniform mat4 u_matrix;\n\nvarying vec2 v_texcoord;\nvarying vec2 v_planecoord;\n\nvoid main() {\n  gl_Position =  u_matrix * a_position;\n  v_texcoord = a_texcoord;\n  v_planecoord = a_planecoord;\n}",
      "frag": "#extension GL_OES_standard_derivatives : enable\n\nprecision highp float;\n\nuniform sampler2D u_fontTexture;\n\nuniform vec4 u_crop;\n\nuniform float u_0;\n\nuniform float u_1;\n\nuniform float u_2;\n\nuniform float u_time;\n\nuniform vec2 u_position;\n\nuniform vec4 u_edge;\n\n\n\nvarying vec2 v_texcoord;\n\nvarying vec2 v_planecoord;\n\nvarying vec2 v_position;\n\n\n\n\n\nfloat median(float r, float g, float b) {\n\n    return max(min(r, g), min(max(r, g), b));\n\n}\n\nfloat map(float value, float min1, float max1, float min2, float max2) {\n\n  return min2 + (value - min1) * (max2 - min2) / (max1 - min1);\n\n}\n\nvec2 calcTextcoord(vec2 uv) {\n\n  vec2 newUv = vec2(\n\n    map(uv.x, 0., 1., u_edge.x, u_edge.y),\n\n    map(uv.y, 0., 1., u_edge.z, u_edge.w)\n\n  );\n\n  // u_crop.x\n\n  return newUv;\n\n}\n\n\n\nfloat charMask(vec2 uv) {\n\n  \n\n  \n\n  \n\n  vec2 texcoord = calcTextcoord(uv);\n\n  // MSDF -> SDF\n\n  vec3 sample = texture2D(u_fontTexture, texcoord).rgb;\n\n  float sigDist = median(sample.r, sample.g, sample.b) - 0.5;\n\n  sigDist = clamp(sigDist + 0.5, 0., 1.0);\n\n  // Crop\n\n  if (u_crop.x > texcoord.x \n\n  ||  u_crop.y < texcoord.x\n\n  ||  u_crop.z > texcoord.y \n\n  ||  u_crop.w < texcoord.y) {\n\n    sigDist = 0.;\n\n  }\n\n  \n\n  return step(0.5, sigDist);\n\n}\n\n\n\nvoid main() {\n\n  \n\n  vec2 st = v_planecoord;\n\n  st *= (1., 1.);\n\n  \n  vec2 st_r = vec2(\n    st.x+sin(v_planecoord.y*20.+u_time*50.)\n    *0.7 * pow((1.-v_planecoord.y),4.5)\n    *pow((1.-abs(u_position.x-u_1)),15.),\n    map(st.y, 0.33,1., \n    0.3*(1.-abs(u_1-u_position.x)) * u_0*1.2, \n    1.-(0.4*(1.-abs(u_1-u_position.x))) * u_0*0.68\n    )\n  );\n  \n  vec2 st_g = vec2(\n    st.x+sin(v_planecoord.y*20.+u_time*(50.)+2.*u_2)\n    *0.7 * pow((1.-v_planecoord.y),4.5)\n    *pow((1.-abs(u_position.x-u_1)),15.),\n    map(st.y, 0.33,1., \n    0.3*(1.-abs(u_1-u_position.x)) * u_0*1.2, \n    1.-(0.4*(1.-abs(u_1-u_position.x))) * u_0*0.68\n    )\n  );\n  vec2 st_b = vec2(\n    st.x+sin(v_planecoord.y*20.+u_time*(50.)+4.*u_2)\n    *0.7 * pow((1.-v_planecoord.y),4.5)\n    *pow((1.-abs(u_position.x-u_1)),15.),\n    map(st.y, 0.33,1., \n    0.3*(1.-abs(u_1-u_position.x)) * u_0*1.2, \n    1.-(0.4*(1.-abs(u_1-u_position.x))) * u_0*0.68\n    )\n  );\n  \n  vec3 color = vec3(\n    1. - charMask(st_r),\n    1. - charMask(st_g),\n    1. - charMask(st_b)\n    );\n\n  \n\n  gl_FragColor = vec4(color, charMask(st_r)+charMask(st_g)+charMask(st_b));\n\n}\n\n",
      "focused": true,
      "error": false,
      "failed": false
    },
    "Z": {
      "letter": "Z",
      "texture": "Cooper_Hewitt_Bold",
      "width": "0.4",
      "textureSize": "0.4",
      "alignToTexture": true,
      "u_0": "MOUSE_Y",
      "u_1": "MOUSE_X",
      "u_2": "0.2",
      "vert": "attribute vec4 a_position;\nattribute vec2 a_texcoord;\nattribute vec2 a_planecoord;\n\nuniform mat4 u_matrix;\n\nvarying vec2 v_texcoord;\nvarying vec2 v_planecoord;\n\nvoid main() {\n  gl_Position =  u_matrix * a_position;\n  v_texcoord = a_texcoord;\n  v_planecoord = a_planecoord;\n}",
      "frag": "#extension GL_OES_standard_derivatives : enable\n\nprecision highp float;\n\nuniform sampler2D u_fontTexture;\n\nuniform vec4 u_crop;\n\nuniform float u_0;\n\nuniform float u_1;\n\nuniform float u_2;\n\nuniform float u_time;\n\nuniform vec2 u_position;\n\nuniform vec4 u_edge;\n\n\n\nvarying vec2 v_texcoord;\n\nvarying vec2 v_planecoord;\n\nvarying vec2 v_position;\n\n\n\n\n\nfloat median(float r, float g, float b) {\n\n    return max(min(r, g), min(max(r, g), b));\n\n}\n\nfloat map(float value, float min1, float max1, float min2, float max2) {\n\n  return min2 + (value - min1) * (max2 - min2) / (max1 - min1);\n\n}\n\nvec2 calcTextcoord(vec2 uv) {\n\n  vec2 newUv = vec2(\n\n    map(uv.x, 0., 1., u_edge.x, u_edge.y),\n\n    map(uv.y, 0., 1., u_edge.z, u_edge.w)\n\n  );\n\n  // u_crop.x\n\n  return newUv;\n\n}\n\n\n\nfloat charMask(vec2 uv) {\n\n  \n\n  \n\n  \n\n  vec2 texcoord = calcTextcoord(uv);\n\n  // MSDF -> SDF\n\n  vec3 sample = texture2D(u_fontTexture, texcoord).rgb;\n\n  float sigDist = median(sample.r, sample.g, sample.b) - 0.5;\n\n  sigDist = clamp(sigDist + 0.5, 0., 1.0);\n\n  // Crop\n\n  if (u_crop.x > texcoord.x \n\n  ||  u_crop.y < texcoord.x\n\n  ||  u_crop.z > texcoord.y \n\n  ||  u_crop.w < texcoord.y) {\n\n    sigDist = 0.;\n\n  }\n\n  \n\n  return step(0.5, sigDist);\n\n}\n\n\n\nvoid main() {\n\n  \n\n  vec2 st = v_planecoord;\n\n  st *= (1., 1.);\n\n  \n  vec2 st_r = vec2(\n    st.x+sin(v_planecoord.y*20.+u_time*50.)\n    *0.7 * pow((1.-v_planecoord.y),4.5)\n    *pow((1.-abs(u_position.x-u_1)),15.),\n    map(st.y, 0.33,1., \n    0.3*(1.-abs(u_1-u_position.x)) * u_0*1.2, \n    1.-(0.4*(1.-abs(u_1-u_position.x))) * u_0*0.68\n    )\n  );\n  \n  vec2 st_g = vec2(\n    st.x+sin(v_planecoord.y*20.+u_time*(50.)+2.*u_2)\n    *0.7 * pow((1.-v_planecoord.y),4.5)\n    *pow((1.-abs(u_position.x-u_1)),15.),\n    map(st.y, 0.33,1., \n    0.3*(1.-abs(u_1-u_position.x)) * u_0*1.2, \n    1.-(0.4*(1.-abs(u_1-u_position.x))) * u_0*0.68\n    )\n  );\n  vec2 st_b = vec2(\n    st.x+sin(v_planecoord.y*20.+u_time*(50.)+4.*u_2)\n    *0.7 * pow((1.-v_planecoord.y),4.5)\n    *pow((1.-abs(u_position.x-u_1)),15.),\n    map(st.y, 0.33,1., \n    0.3*(1.-abs(u_1-u_position.x)) * u_0*1.2, \n    1.-(0.4*(1.-abs(u_1-u_position.x))) * u_0*0.68\n    )\n  );\n  \n  vec3 color = vec3(\n    1. - charMask(st_r),\n    1. - charMask(st_g),\n    1. - charMask(st_b)\n    );\n\n  \n\n  gl_FragColor = vec4(color, charMask(st_r)+charMask(st_g)+charMask(st_b));\n\n}\n\n",
      "focused": true,
      "error": false,
      "failed": false
    }
  }
}